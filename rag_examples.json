[
  {
    "original_prompt": "メモ帳を開いて\"猫\"と入力",
    "code": "import subprocess\nimport time\nimport pygetwindow as gw\nimport pyperclip\nimport pyautogui\n\n# Best Practice: Always check for an existing window first.\nnotepad_windows = gw.getWindowsWithTitle('メモ帳')\n\nif notepad_windows:\n    window = notepad_windows[0]\n    window.activate()\n    time.sleep(1)\nelse:\n    subprocess.Popen(['notepad.exe'])\n    time.sleep(2)\n    window = gw.getWindowsWithTitle('メモ帳')[0]\n    window.activate()\n    time.sleep(1)\n\n# Best Practice: Use clipboard for non-ASCII characters.\npyperclip.copy('猫')\npyautogui.hotkey('ctrl', 'v')\n"
  },
  {
    "original_prompt": "ブラウザを開いて\"犬\"を検索",
    "code": "import asyncio\nimport nest_asyncio\nfrom playwright.async_api import async_playwright\n\nasync def main():\n    async with async_playwright() as p:\n        browser = await p.chromium.launch(headless=False)\n        page = await browser.new_page()\n        await page.goto(\"https://www.google.com\")\n        # Best practice: Use the dynamically verified, most reliable selector for Google.\n        search_box = page.locator('textarea[name=\"q\"]')\n        await search_box.fill(\"犬\")\n        await search_box.press(\"Enter\")\n        await page.wait_for_load_state('networkidle')\n        # Best practice: Keep the browser open for verification.\n        await asyncio.Future()\n\nasyncio.run(main())\n"
  }
]