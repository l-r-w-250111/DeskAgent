{"docstore/ref_doc_info": {"cf1d3d3a-fdb3-4af6-825a-cf20aa5a7db7": {"node_ids": ["ce5683cb-7f59-4c4d-88d1-965d4ecba183"], "metadata": {"python_code": "import subprocess\nimport pyautogui\nimport pyperclip\nimport time\n\n# 1. Launch Notepad\nsubprocess.Popen(['notepad.exe'])\ntime.sleep(2) # Wait for the app to open\n\n# 2. Type the text\npyperclip.copy(\"\u3053\u3093\u306b\u3061\u306f\")\npyautogui.hotkey('ctrl', 'v')\n", "original_prompt": "\u30e1\u30e2\u5e33\u3092\u8d77\u52d5\u3057\u3066\u3001\u300c\u3053\u3093\u306b\u3061\u306f\u300d\u3068\u5165\u529b\u3059\u308b"}}, "fdf755a7-5f50-4b50-a9a1-9ed35636c886": {"node_ids": ["fef7d30a-efce-4c8d-b80b-4e267993b205"], "metadata": {"python_code": "import subprocess\n\nsubprocess.Popen(['calc.exe'])\n", "original_prompt": "\u96fb\u5353\u3092\u8d77\u52d5\u3059\u308b"}}, "f321fda4-41ec-4ba4-a919-336227f6711e": {"node_ids": ["f4ee5d7b-9a07-4498-939b-c225c0b782d3"], "metadata": {"python_code": "import pyautogui\n\n# This example assumes the coordinates are known.\n# A more robust solution would use OCR.\npyautogui.click(x=50, y=50)\n", "original_prompt": "\u300cFile\u300d\u30e1\u30cb\u30e5\u30fc\u3092\u30af\u30ea\u30c3\u30af\u3059\u308b"}}, "0a215a5e-877b-4df8-9551-715d247cba77": {"node_ids": ["899d4655-429f-40d1-a231-5d178dde75d9"], "metadata": {"python_code": "from playwright.sync_api import sync_playwright\nimport time\n\nwith sync_playwright() as p:\n    browser = p.chromium.launch(headless=False)\n    page = browser.new_page()\n    page.goto('https://www.google.com')\n    # Google\u306e\u691c\u7d22\u30dc\u30c3\u30af\u30b9\u306f'q'\u3068\u3044\u3046name\u5c5e\u6027\u3092\u6301\u3063\u3066\u3044\u307e\u3059\n    search_box = page.locator('textarea[name=\"q\"]')\n    search_box.fill('\u4eca\u65e5\u306e\u5929\u6c17')\n    search_box.press('Enter')\n    time.sleep(5) # \u691c\u7d22\u7d50\u679c\u306e\u8868\u793a\u3092\u5f85\u3064\n    browser.close()\n", "original_prompt": "\u30d6\u30e9\u30a6\u30b6\u3092\u958b\u3044\u3066\u3001'\u4eca\u65e5\u306e\u5929\u6c17'\u3092\u691c\u7d22\u3057\u3066"}}, "b49103a1-6cd4-4783-a73c-f72d342383b3": {"node_ids": ["98833baf-cce1-4c0e-968e-9c8a92d6c610"], "metadata": {"python_code": "import subprocess\nimport pyautogui\nimport pyperclip\nimport time\n\n# 1. Launch Notepad\nsubprocess.Popen(['notepad.exe'])\ntime.sleep(2) # Wait for the app to open\n\n# 2. Type the text\npyperclip.copy(\"\u3053\u3093\u306b\u3061\u306f\")\npyautogui.hotkey('ctrl', 'v')\n", "original_prompt": "\u30e1\u30e2\u5e33\u3092\u8d77\u52d5\u3057\u3066\u3001\u300c\u3053\u3093\u306b\u3061\u306f\u300d\u3068\u5165\u529b\u3059\u308b"}}, "ad519a9b-1eb8-4ec5-af04-f233b345cf30": {"node_ids": ["811bf4ff-7cfe-419c-a9a0-8e1ba378735a"], "metadata": {"python_code": "import subprocess\n\nsubprocess.Popen(['calc.exe'])\n", "original_prompt": "\u96fb\u5353\u3092\u8d77\u52d5\u3059\u308b"}}, "e5e6857e-52af-4cf5-85f6-9274da51020d": {"node_ids": ["2899731a-4e42-4d2b-9031-51646a18d048"], "metadata": {"python_code": "import pyautogui\n\n# This example assumes the coordinates are known.\n# A more robust solution would use OCR.\npyautogui.click(x=50, y=50)\n", "original_prompt": "\u300cFile\u300d\u30e1\u30cb\u30e5\u30fc\u3092\u30af\u30ea\u30c3\u30af\u3059\u308b"}}, "72f58fca-f632-4808-9835-a3fad31b7ee6": {"node_ids": ["4c4cca88-be88-48b6-b9c5-559d9b349ce3"], "metadata": {"python_code": "from playwright.sync_api import sync_playwright\nimport time\n\nwith sync_playwright() as p:\n    browser = p.chromium.launch(headless=False)\n    page = browser.new_page()\n    page.goto('https://www.google.com')\n    # Google\u306e\u691c\u7d22\u30dc\u30c3\u30af\u30b9\u306f'q'\u3068\u3044\u3046name\u5c5e\u6027\u3092\u6301\u3063\u3066\u3044\u307e\u3059\n    search_box = page.locator('textarea[name=\"q\"]')\n    search_box.fill('\u4eca\u65e5\u306e\u5929\u6c17')\n    search_box.press('Enter')\n    time.sleep(5) # \u691c\u7d22\u7d50\u679c\u306e\u8868\u793a\u3092\u5f85\u3064\n    browser.close()\n", "original_prompt": "\u30d6\u30e9\u30a6\u30b6\u3092\u958b\u3044\u3066\u3001'\u4eca\u65e5\u306e\u5929\u6c17'\u3092\u691c\u7d22\u3057\u3066"}}, "0c77a126-7eb8-4cea-8163-169e3bfa51cd": {"node_ids": ["54c3c618-1952-4bd5-a36c-8bf7fc7bd154"], "metadata": {"python_code": "from playwright.sync_api import sync_playwright\nimport time\n\nwith sync_playwright() as p:\n    # 9222\u30dd\u30fc\u30c8\u3067\u8d77\u52d5\u3057\u3066\u3044\u308b\u65e2\u5b58\u306e\u30d6\u30e9\u30a6\u30b6\u306b\u63a5\u7d9a\n    browser = p.chromium.connect_over_cdp(\"http://localhost:9222\")\n    # \u65e2\u5b58\u306e\u6700\u521d\u306e\u30bf\u30d6\uff08\u30da\u30fc\u30b8\uff09\u3092\u53d6\u5f97\n    page = browser.contexts[0].pages[0]\n    page.goto('https://www.google.com')\n    search_box = page.locator('textarea[name=\"q\"]')\n    search_box.fill('playwright')\n    search_box.press('Enter')\n    time.sleep(5)\n    # \u3053\u306e\u30b1\u30fc\u30b9\u3067\u306f\u30d6\u30e9\u30a6\u30b6\u3092\u9589\u3058\u306a\u3044\u306e\u304c\u4e00\u822c\u7684\n", "original_prompt": "\u3059\u3067\u306b\u958b\u3044\u3066\u3044\u308b\u30d6\u30e9\u30a6\u30b6\u306b\u63a5\u7d9a\u3057\u3066\u3001'playwright'\u306b\u3064\u3044\u3066\u691c\u7d22\u3057\u3066"}}, "1f182f80-8348-4015-b98b-87e335251d40": {"node_ids": ["7385c552-d779-4003-b26a-40c09ef7508e"], "metadata": {"python_code": "import subprocess\nimport pyautogui\nimport pyperclip\nimport time\n\n# 1. Launch Notepad\nsubprocess.Popen(['notepad.exe'])\ntime.sleep(2) # Wait for the app to open\n\n# 2. Type the text\npyperclip.copy(\"\u3053\u3093\u306b\u3061\u306f\")\npyautogui.hotkey('ctrl', 'v')\n", "original_prompt": "\u30e1\u30e2\u5e33\u3092\u8d77\u52d5\u3057\u3066\u3001\u300c\u3053\u3093\u306b\u3061\u306f\u300d\u3068\u5165\u529b\u3059\u308b"}}, "14bcbad6-0719-46bc-807c-76c7888c3f99": {"node_ids": ["4d012992-f35c-4787-bf3e-7b3945a74874"], "metadata": {"python_code": "import subprocess\n\nsubprocess.Popen(['calc.exe'])\n", "original_prompt": "\u96fb\u5353\u3092\u8d77\u52d5\u3059\u308b"}}, "f56beeb3-75f6-4d8a-b4e9-97a60d184901": {"node_ids": ["75461798-5ad1-4e1a-a303-503a4eea989f"], "metadata": {"python_code": "import pyautogui\n\n# This example assumes the coordinates are known.\n# A more robust solution would use OCR.\npyautogui.click(x=50, y=50)\n", "original_prompt": "\u300cFile\u300d\u30e1\u30cb\u30e5\u30fc\u3092\u30af\u30ea\u30c3\u30af\u3059\u308b"}}, "17bed55c-08bc-4414-83fa-e524af158345": {"node_ids": ["26b6fc68-8a7f-48af-974a-500b7bb21b4e"], "metadata": {"python_code": "from playwright.sync_api import sync_playwright\nimport time\n\nwith sync_playwright() as p:\n    browser = p.chromium.launch(headless=False)\n    page = browser.new_page()\n    page.goto('https://www.google.com')\n    search_box = page.locator('textarea[name=\"q\"]')\n    search_box.fill('\u4eca\u65e5\u306e\u5929\u6c17')\n    search_box.press('Enter')\n    page.wait_for_load_state('networkidle') # \u30da\u30fc\u30b8\u306e\u8aad\u307f\u8fbc\u307f\u304c\u5b8c\u4e86\u3059\u308b\u307e\u3067\u5f85\u6a5f\n    browser.close()\n", "original_prompt": "\u30d6\u30e9\u30a6\u30b6\u3092\u958b\u3044\u3066\u3001'\u4eca\u65e5\u306e\u5929\u6c17'\u3092\u691c\u7d22\u3057\u3066"}}, "c5288c58-f3a4-45a6-bb6e-b9056443febd": {"node_ids": ["6cb99467-75ea-40f4-9c82-9b4f1ac3989d"], "metadata": {"python_code": "from playwright.sync_api import sync_playwright\nimport time\n\nwith sync_playwright() as p:\n    browser = p.chromium.connect_over_cdp(\"http://localhost:9222\")\n    page = browser.contexts[0].pages[0]\n    page.goto('https://www.google.com')\n    search_box = page.locator('textarea[name=\"q\"]')\n    search_box.fill('playwright')\n    search_box.press('Enter')\n    page.wait_for_load_state('networkidle') # \u30da\u30fc\u30b8\u306e\u8aad\u307f\u8fbc\u307f\u304c\u5b8c\u4e86\u3059\u308b\u307e\u3067\u5f85\u6a5f\n    # \u3053\u306e\u30b1\u30fc\u30b9\u3067\u306f\u30d6\u30e9\u30a6\u30b6\u3092\u9589\u3058\u306a\u3044\u306e\u304c\u4e00\u822c\u7684\n", "original_prompt": "\u3059\u3067\u306b\u958b\u3044\u3066\u3044\u308b\u30d6\u30e9\u30a6\u30b6\u306b\u63a5\u7d9a\u3057\u3066\u3001'playwright'\u306b\u3064\u3044\u3066\u691c\u7d22\u3057\u3066"}}, "d61ebbf1-5c74-4123-a6a1-79c395241d46": {"node_ids": ["7b04aac3-7ab1-4bc5-ae0a-8c231e58a577"], "metadata": {"python_code": "import subprocess\nimport pyautogui\nimport pyperclip\nimport time\n\n# 1. Launch Notepad\nsubprocess.Popen(['notepad.exe'])\ntime.sleep(2) # Wait for the app to open\n\n# 2. Type the text\npyperclip.copy(\"\u3053\u3093\u306b\u3061\u306f\")\npyautogui.hotkey('ctrl', 'v')\n", "original_prompt": "\u30e1\u30e2\u5e33\u3092\u8d77\u52d5\u3057\u3066\u3001\u300c\u3053\u3093\u306b\u3061\u306f\u300d\u3068\u5165\u529b\u3059\u308b"}}, "3c37b652-4f51-4989-9143-f7e5614c6f4c": {"node_ids": ["7bbfd32c-961f-4638-a647-2c3e4fcc28cf"], "metadata": {"python_code": "import subprocess\n\nsubprocess.Popen(['calc.exe'])\n", "original_prompt": "\u96fb\u5353\u3092\u8d77\u52d5\u3059\u308b"}}, "db7ee52f-2893-4702-b8e6-ca6e9b84930b": {"node_ids": ["6d10519d-28d8-4140-a588-e4cab9139f0e"], "metadata": {"python_code": "import pyautogui\n\n# This example assumes the coordinates are known.\n# A more robust solution would use OCR.\npyautogui.click(x=50, y=50)\n", "original_prompt": "\u300cFile\u300d\u30e1\u30cb\u30e5\u30fc\u3092\u30af\u30ea\u30c3\u30af\u3059\u308b"}}, "307df8e3-ef1b-431e-9b12-fdc58cb5df47": {"node_ids": ["dfa01486-658a-4ced-b063-2d091f6d6d83"], "metadata": {"python_code": "from playwright.sync_api import sync_playwright\nimport time\n\np = sync_playwright().start()\nbrowser = p.chromium.launch(headless=False)\npage = browser.new_page()\npage.goto('https://www.google.com')\nsearch_box = page.locator('textarea[name=\"q\"]')\nsearch_box.fill('\u4eca\u65e5\u306e\u5929\u6c17')\nsearch_box.press('Enter')\npage.wait_for_load_state('networkidle')\n# Note: Do not close the browser or stop playwright\n", "original_prompt": "\u30d6\u30e9\u30a6\u30b6\u3092\u958b\u3044\u3066\u3001'\u4eca\u65e5\u306e\u5929\u6c17'\u3092\u691c\u7d22\u3057\u3066"}}, "af46dbf2-0257-4dc9-bd78-89bde2d772cd": {"node_ids": ["8a094b6b-b03e-41e8-aea0-83885473da07"], "metadata": {"python_code": "from playwright.sync_api import sync_playwright\nimport time\n\np = sync_playwright().start()\nbrowser = p.chromium.connect_over_cdp(\"http://localhost:9222\")\npage = browser.contexts[0].pages[0]\npage.goto('https://www.google.com')\nsearch_box = page.locator('textarea[name=\"q\"]')\nsearch_box.fill('playwright')\nsearch_box.press('Enter')\npage.wait_for_load_state('networkidle')\n# Note: Do not close the browser or stop playwright\n", "original_prompt": "\u3059\u3067\u306b\u958b\u3044\u3066\u3044\u308b\u30d6\u30e9\u30a6\u30b6\u306b\u63a5\u7d9a\u3057\u3066\u3001'playwright'\u306b\u3064\u3044\u3066\u691c\u7d22\u3057\u3066"}}, "adf09a0a-0d54-46b8-9878-1dcab0251bd5": {"node_ids": ["ca8d9435-a66a-4b8e-af68-8650383c9362"], "metadata": {"python_code": "import subprocess\nimport pyautogui\nimport pyperclip\nimport time\n\nsubprocess.Popen(['notepad.exe'])\ntime.sleep(2)\npyperclip.copy(\"\u3053\u3093\u306b\u3061\u306f\")\npyautogui.hotkey('ctrl', 'v')\n", "original_prompt": "\u30e1\u30e2\u5e33\u3092\u8d77\u52d5\u3057\u3066\u3001\u300c\u3053\u3093\u306b\u3061\u306f\u300d\u3068\u5165\u529b\u3059\u308b"}}, "298d0550-5f65-438b-867e-9b19c8b0105e": {"node_ids": ["7a1e7023-ed1f-4630-8c7b-4ccf3cf0bb3b"], "metadata": {"python_code": "import subprocess\n\nsubprocess.Popen(['calc.exe'])\n", "original_prompt": "\u96fb\u5353\u3092\u8d77\u52d5\u3059\u308b"}}, "f9043947-45e4-4cf3-b5db-b106c2ad0b50": {"node_ids": ["06b155c0-bca2-4f73-8ed8-02a2a1839f58"], "metadata": {"python_code": "import asyncio\nfrom playwright.async_api import async_playwright\n\nasync def main():\n    async with async_playwright() as p:\n        browser = await p.chromium.launch(headless=False)\n        page = await browser.new_page()\n        await page.goto('https://www.google.com')\n        search_box = page.locator('textarea[name=\"q\"]')\n        await search_box.fill('\u4eca\u65e5\u306e\u5929\u6c17')\n        await search_box.press('Enter')\n        await page.wait_for_load_state('networkidle')\n        # Keep browser open to see the result\n        await page.pause()\n\nif __name__ == '__main__':\n    asyncio.run(main())\n", "original_prompt": "\u30d6\u30e9\u30a6\u30b6\u3092\u958b\u3044\u3066\u3001'\u4eca\u65e5\u306e\u5929\u6c17'\u3092\u691c\u7d22\u3057\u3066"}}, "938e4069-2bb9-4af2-bd0c-431d6b544513": {"node_ids": ["ca819f34-02b9-41bb-9bb2-6d21e2069b22"], "metadata": {"python_code": "import asyncio\nfrom playwright.async_api import async_playwright\n\nasync def main():\n    async with async_playwright() as p:\n        browser = await p.chromium.connect_over_cdp(\"http://localhost:9222\")\n        page = browser.contexts[0].pages[0]\n        await page.goto('https://www.google.com')\n        search_box = page.locator('textarea[name=\"q\"]')\n        await search_box.fill('playwright')\n        await search_box.press('Enter')\n        await page.wait_for_load_state('networkidle')\n        # Keep browser open to see the result\n        await page.pause()\n\nif __name__ == '__main__':\n    asyncio.run(main())\n", "original_prompt": "\u3059\u3067\u306b\u958b\u3044\u3066\u3044\u308b\u30d6\u30e9\u30a6\u30b6\u306b\u63a5\u7d9a\u3057\u3066\u3001'playwright'\u306b\u3064\u3044\u3066\u691c\u7d22\u3057\u3066"}}, "fa96f3c6-e8ab-4b1b-b3d1-c9fb3f737f0f": {"node_ids": ["7d22b06e-423f-449f-80b1-63f7eef48976"], "metadata": {"python_code": "import subprocess\nimport pyautogui\nimport pyperclip\nimport time\nimport pygetwindow as gw\n\n# Try to find an existing Notepad window\nnotepad_windows = gw.getWindowsWithTitle('Notepad')\nif notepad_windows:\n    # Activate the first found window\n    notepad_windows[0].activate()\n    time.sleep(1)\nelse:\n    # Launch Notepad if no window is found\n    subprocess.Popen(['notepad.exe'])\n    time.sleep(2)\n\npyperclip.copy(\"\u3053\u3093\u306b\u3061\u306f\")\npyautogui.hotkey('ctrl', 'v')\n", "original_prompt": "\u30e1\u30e2\u5e33\u3092\u8d77\u52d5\u3057\u3066\u3001\u300c\u3053\u3093\u306b\u3061\u306f\u300d\u3068\u5165\u529b\u3059\u308b"}}, "8aab9cbd-83e8-4409-843d-320f6cf75359": {"node_ids": ["cdb05aaf-569f-45b8-b9d5-73aaf0f0a9e6"], "metadata": {"python_code": "import subprocess\nimport time\nimport pygetwindow as gw\n\n# Try to find an existing Calculator window\ncalc_windows = gw.getWindowsWithTitle('Calculator')\nif calc_windows:\n    # Activate the first found window\n    calc_windows[0].activate()\n    time.sleep(1)\nelse:\n    # Launch Calculator if no window is found\n    subprocess.Popen(['calc.exe'])\n    time.sleep(2)\n", "original_prompt": "\u96fb\u5353\u3092\u8d77\u52d5\u3059\u308b"}}, "fd4d577e-77aa-4f95-ba1c-89e560bfa739": {"node_ids": ["40a02ba8-2605-42bb-81cb-68868dc365d9"], "metadata": {"python_code": "import asyncio\nimport nest_asyncio\nfrom playwright.async_api import async_playwright\n\nnest_asyncio.apply()\n\nasync def main():\n    async with async_playwright() as p:\n        browser = await p.chromium.launch(headless=False)\n        page = await browser.new_page()\n        await page.goto('https://www.google.com')\n        search_box = page.locator('textarea[name=\\\"q\\\"]')\n        await search_box.fill('\u4eca\u65e5\u306e\u5929\u6c17')\n        await page.wait_for_timeout(1000) # Wait to avoid reCAPTCHA\n        await search_box.press('Enter')\n        await page.wait_for_load_state('networkidle')\n        # Pause to keep the browser open\n        await page.pause()\n\nasyncio.run(main())\n", "original_prompt": "\u30d6\u30e9\u30a6\u30b6\u3092\u958b\u3044\u3066\u3001'\u4eca\u65e5\u306e\u5929\u6c17'\u3092\u691c\u7d22\u3057\u3066"}}, "917ffb3f-1e86-4cf6-837a-6c9ec30ee8bb": {"node_ids": ["a3ea6649-f7a1-4ff2-bb57-9f2a6ce52e69"], "metadata": {"python_code": "import asyncio\nimport nest_asyncio\nfrom playwright.async_api import async_playwright\n\nnest_asyncio.apply()\n\nasync def main():\n    async with async_playwright() as p:\n        browser = await p.chromium.connect_over_cdp(\"http://localhost:9222\")\n        page = browser.contexts[0].pages[0]\n        await page.goto('https://www.google.com')\n        search_box = page.locator('textarea[name=\\\"q\\\"]')\n        await search_box.fill('playwright')\n        await page.wait_for_timeout(1000) # Wait to avoid reCAPTCHA\n        await search_box.press('Enter')\n        await page.wait_for_load_state('networkidle')\n        # Pause to keep the browser open\n        await page.pause()\n\nasyncio.run(main())\n", "original_prompt": "\u3059\u3067\u306b\u958b\u3044\u3066\u3044\u308b\u30d6\u30e9\u30a6\u30b6\u306b\u63a5\u7d9a\u3057\u3066\u3001'playwright'\u306b\u3064\u3044\u3066\u691c\u7d22\u3057\u3066"}}, "5878c162-4272-4547-bd6d-5c130cce3aa3": {"node_ids": ["d3b54230-6220-4ca5-bae4-baecc66b54df"], "metadata": {"python_code": "import subprocess\nimport pyautogui\nimport pyperclip\nimport time\nimport pygetwindow as gw\n\n# Try to find an existing Notepad window\nnotepad_windows = gw.getWindowsWithTitle('Notepad')\nif notepad_windows:\n    # Activate the first found window\n    notepad_windows[0].activate()\n    time.sleep(1)\nelse:\n    # Launch Notepad if no window is found\n    subprocess.Popen(['notepad.exe'])\n    time.sleep(2)\n\npyperclip.copy(\"\u3053\u3093\u306b\u3061\u306f\")\npyautogui.hotkey('ctrl', 'v')\n", "original_prompt": "\u30e1\u30e2\u5e33\u3092\u8d77\u52d5\u3057\u3066\u3001\u300c\u3053\u3093\u306b\u3061\u306f\u300d\u3068\u5165\u529b\u3059\u308b"}}, "d10dd478-78ee-49e8-84f6-d8bbcbc9ac1b": {"node_ids": ["52f1b6a5-2760-4e5f-b5ae-5df957da5d04"], "metadata": {"python_code": "import subprocess\nimport time\nimport pygetwindow as gw\n\n# Try to find an existing Calculator window\ncalc_windows = gw.getWindowsWithTitle('Calculator')\nif calc_windows:\n    # Activate the first found window\n    calc_windows[0].activate()\n    time.sleep(1)\nelse:\n    # Launch Calculator if no window is found\n    subprocess.Popen(['calc.exe'])\n    time.sleep(2)\n", "original_prompt": "\u96fb\u5353\u3092\u8d77\u52d5\u3059\u308b"}}, "38b239ba-13ba-40a1-9e02-12281ad49f61": {"node_ids": ["3896c358-acb8-43c9-9031-e8514aba61a5"], "metadata": {"python_code": "import asyncio\nimport nest_asyncio\nfrom playwright.async_api import async_playwright\n\nnest_asyncio.apply()\n\nasync def main():\n    async with async_playwright() as p:\n        browser = await p.chromium.launch(headless=False)\n        page = await browser.new_page()\n        await page.goto('https://www.google.com')\n        search_box = page.get_by_role(\"searchbox\", name=\"q\")\n        await search_box.fill('\u4eca\u65e5\u306e\u5929\u6c17')\n        await page.wait_for_timeout(1000) # Wait to avoid reCAPTCHA\n        await search_box.press('Enter')\n        await page.wait_for_load_state('networkidle')\n        # Keep the browser open indefinitely\n        await asyncio.Future()\n\nasyncio.run(main())\n", "original_prompt": "\u30d6\u30e9\u30a6\u30b6\u3092\u958b\u3044\u3066\u3001'\u4eca\u65e5\u306e\u5929\u6c17'\u3092\u691c\u7d22\u3057\u3066"}}, "46e53510-9843-4e51-a144-70b9e4c18a38": {"node_ids": ["322d2080-65f9-41a4-ae03-e94a97f585a3"], "metadata": {"python_code": "import asyncio\nimport nest_asyncio\nfrom playwright.async_api import async_playwright\n\nnest_asyncio.apply()\n\nasync def main():\n    async with async_playwright() as p:\n        browser = await p.chromium.launch(headless=False)\n        page = await browser.new_page()\n        await page.goto('https://www.yahoo.co.jp')\n        # Use a robust, role-based selector for Yahoo's search box\n        search_box = page.locator('[role=\"search\"] input[type=\"search\"]')\n        await search_box.fill('\u6700\u65b0\u30cb\u30e5\u30fc\u30b9')\n        await page.wait_for_timeout(1000) # Wait to avoid reCAPTCHA\n        await search_box.press('Enter')\n        await page.wait_for_load_state('networkidle')\n        # Keep the browser open indefinitely\n        await asyncio.Future()\n\nasyncio.run(main())\n", "original_prompt": "Yahoo! JAPAN\u3067\u300c\u6700\u65b0\u30cb\u30e5\u30fc\u30b9\u300d\u3092\u691c\u7d22\u3057\u3066"}}}, "docstore/data": {"ce5683cb-7f59-4c4d-88d1-965d4ecba183": {"__data__": {"id_": "ce5683cb-7f59-4c4d-88d1-965d4ecba183", "embedding": null, "metadata": {"python_code": "import subprocess\nimport pyautogui\nimport pyperclip\nimport time\n\n# 1. Launch Notepad\nsubprocess.Popen(['notepad.exe'])\ntime.sleep(2) # Wait for the app to open\n\n# 2. Type the text\npyperclip.copy(\"\u3053\u3093\u306b\u3061\u306f\")\npyautogui.hotkey('ctrl', 'v')\n", "original_prompt": "\u30e1\u30e2\u5e33\u3092\u8d77\u52d5\u3057\u3066\u3001\u300c\u3053\u3093\u306b\u3061\u306f\u300d\u3068\u5165\u529b\u3059\u308b"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "cf1d3d3a-fdb3-4af6-825a-cf20aa5a7db7", "node_type": "4", "metadata": {"python_code": "import subprocess\nimport pyautogui\nimport pyperclip\nimport time\n\n# 1. Launch Notepad\nsubprocess.Popen(['notepad.exe'])\ntime.sleep(2) # Wait for the app to open\n\n# 2. Type the text\npyperclip.copy(\"\u3053\u3093\u306b\u3061\u306f\")\npyautogui.hotkey('ctrl', 'v')\n", "original_prompt": "\u30e1\u30e2\u5e33\u3092\u8d77\u52d5\u3057\u3066\u3001\u300c\u3053\u3093\u306b\u3061\u306f\u300d\u3068\u5165\u529b\u3059\u308b"}, "hash": "0772969494deb1a5626d2bd94b138bf390c11eed21a13accb187ffb6935d81d2", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "\u30e1\u30e2\u5e33\u3092\u8d77\u52d5\u3057\u3066\u3001\u300c\u3053\u3093\u306b\u3061\u306f\u300d\u3068\u5165\u529b\u3059\u308b", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 21, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "fef7d30a-efce-4c8d-b80b-4e267993b205": {"__data__": {"id_": "fef7d30a-efce-4c8d-b80b-4e267993b205", "embedding": null, "metadata": {"python_code": "import subprocess\n\nsubprocess.Popen(['calc.exe'])\n", "original_prompt": "\u96fb\u5353\u3092\u8d77\u52d5\u3059\u308b"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "fdf755a7-5f50-4b50-a9a1-9ed35636c886", "node_type": "4", "metadata": {"python_code": "import subprocess\n\nsubprocess.Popen(['calc.exe'])\n", "original_prompt": "\u96fb\u5353\u3092\u8d77\u52d5\u3059\u308b"}, "hash": "e1a1a0f11fa94598abdb46d6c5257931f0d19ec320bcd0c141fd0f49edfffce4", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "\u96fb\u5353\u3092\u8d77\u52d5\u3059\u308b", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 7, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "f4ee5d7b-9a07-4498-939b-c225c0b782d3": {"__data__": {"id_": "f4ee5d7b-9a07-4498-939b-c225c0b782d3", "embedding": null, "metadata": {"python_code": "import pyautogui\n\n# This example assumes the coordinates are known.\n# A more robust solution would use OCR.\npyautogui.click(x=50, y=50)\n", "original_prompt": "\u300cFile\u300d\u30e1\u30cb\u30e5\u30fc\u3092\u30af\u30ea\u30c3\u30af\u3059\u308b"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "f321fda4-41ec-4ba4-a919-336227f6711e", "node_type": "4", "metadata": {"python_code": "import pyautogui\n\n# This example assumes the coordinates are known.\n# A more robust solution would use OCR.\npyautogui.click(x=50, y=50)\n", "original_prompt": "\u300cFile\u300d\u30e1\u30cb\u30e5\u30fc\u3092\u30af\u30ea\u30c3\u30af\u3059\u308b"}, "hash": "06407f8aad2b04bc414368e305a0636928b2727413beb717e95905d2e3682caf", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "\u300cFile\u300d\u30e1\u30cb\u30e5\u30fc\u3092\u30af\u30ea\u30c3\u30af\u3059\u308b", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 17, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "899d4655-429f-40d1-a231-5d178dde75d9": {"__data__": {"id_": "899d4655-429f-40d1-a231-5d178dde75d9", "embedding": null, "metadata": {"python_code": "from playwright.sync_api import sync_playwright\nimport time\n\nwith sync_playwright() as p:\n    browser = p.chromium.launch(headless=False)\n    page = browser.new_page()\n    page.goto('https://www.google.com')\n    # Google\u306e\u691c\u7d22\u30dc\u30c3\u30af\u30b9\u306f'q'\u3068\u3044\u3046name\u5c5e\u6027\u3092\u6301\u3063\u3066\u3044\u307e\u3059\n    search_box = page.locator('textarea[name=\"q\"]')\n    search_box.fill('\u4eca\u65e5\u306e\u5929\u6c17')\n    search_box.press('Enter')\n    time.sleep(5) # \u691c\u7d22\u7d50\u679c\u306e\u8868\u793a\u3092\u5f85\u3064\n    browser.close()\n", "original_prompt": "\u30d6\u30e9\u30a6\u30b6\u3092\u958b\u3044\u3066\u3001'\u4eca\u65e5\u306e\u5929\u6c17'\u3092\u691c\u7d22\u3057\u3066"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "0a215a5e-877b-4df8-9551-715d247cba77", "node_type": "4", "metadata": {"python_code": "from playwright.sync_api import sync_playwright\nimport time\n\nwith sync_playwright() as p:\n    browser = p.chromium.launch(headless=False)\n    page = browser.new_page()\n    page.goto('https://www.google.com')\n    # Google\u306e\u691c\u7d22\u30dc\u30c3\u30af\u30b9\u306f'q'\u3068\u3044\u3046name\u5c5e\u6027\u3092\u6301\u3063\u3066\u3044\u307e\u3059\n    search_box = page.locator('textarea[name=\"q\"]')\n    search_box.fill('\u4eca\u65e5\u306e\u5929\u6c17')\n    search_box.press('Enter')\n    time.sleep(5) # \u691c\u7d22\u7d50\u679c\u306e\u8868\u793a\u3092\u5f85\u3064\n    browser.close()\n", "original_prompt": "\u30d6\u30e9\u30a6\u30b6\u3092\u958b\u3044\u3066\u3001'\u4eca\u65e5\u306e\u5929\u6c17'\u3092\u691c\u7d22\u3057\u3066"}, "hash": "d439d52b1c751e775c16fc259783f75c060c4b49730f2f67d608429b3f2e03f9", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "\u30d6\u30e9\u30a6\u30b6\u3092\u958b\u3044\u3066\u3001'\u4eca\u65e5\u306e\u5929\u6c17'\u3092\u691c\u7d22\u3057\u3066", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 21, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "98833baf-cce1-4c0e-968e-9c8a92d6c610": {"__data__": {"id_": "98833baf-cce1-4c0e-968e-9c8a92d6c610", "embedding": null, "metadata": {"python_code": "import subprocess\nimport pyautogui\nimport pyperclip\nimport time\n\n# 1. Launch Notepad\nsubprocess.Popen(['notepad.exe'])\ntime.sleep(2) # Wait for the app to open\n\n# 2. Type the text\npyperclip.copy(\"\u3053\u3093\u306b\u3061\u306f\")\npyautogui.hotkey('ctrl', 'v')\n", "original_prompt": "\u30e1\u30e2\u5e33\u3092\u8d77\u52d5\u3057\u3066\u3001\u300c\u3053\u3093\u306b\u3061\u306f\u300d\u3068\u5165\u529b\u3059\u308b"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "b49103a1-6cd4-4783-a73c-f72d342383b3", "node_type": "4", "metadata": {"python_code": "import subprocess\nimport pyautogui\nimport pyperclip\nimport time\n\n# 1. Launch Notepad\nsubprocess.Popen(['notepad.exe'])\ntime.sleep(2) # Wait for the app to open\n\n# 2. Type the text\npyperclip.copy(\"\u3053\u3093\u306b\u3061\u306f\")\npyautogui.hotkey('ctrl', 'v')\n", "original_prompt": "\u30e1\u30e2\u5e33\u3092\u8d77\u52d5\u3057\u3066\u3001\u300c\u3053\u3093\u306b\u3061\u306f\u300d\u3068\u5165\u529b\u3059\u308b"}, "hash": "0772969494deb1a5626d2bd94b138bf390c11eed21a13accb187ffb6935d81d2", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "\u30e1\u30e2\u5e33\u3092\u8d77\u52d5\u3057\u3066\u3001\u300c\u3053\u3093\u306b\u3061\u306f\u300d\u3068\u5165\u529b\u3059\u308b", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 21, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "811bf4ff-7cfe-419c-a9a0-8e1ba378735a": {"__data__": {"id_": "811bf4ff-7cfe-419c-a9a0-8e1ba378735a", "embedding": null, "metadata": {"python_code": "import subprocess\n\nsubprocess.Popen(['calc.exe'])\n", "original_prompt": "\u96fb\u5353\u3092\u8d77\u52d5\u3059\u308b"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "ad519a9b-1eb8-4ec5-af04-f233b345cf30", "node_type": "4", "metadata": {"python_code": "import subprocess\n\nsubprocess.Popen(['calc.exe'])\n", "original_prompt": "\u96fb\u5353\u3092\u8d77\u52d5\u3059\u308b"}, "hash": "e1a1a0f11fa94598abdb46d6c5257931f0d19ec320bcd0c141fd0f49edfffce4", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "\u96fb\u5353\u3092\u8d77\u52d5\u3059\u308b", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 7, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "2899731a-4e42-4d2b-9031-51646a18d048": {"__data__": {"id_": "2899731a-4e42-4d2b-9031-51646a18d048", "embedding": null, "metadata": {"python_code": "import pyautogui\n\n# This example assumes the coordinates are known.\n# A more robust solution would use OCR.\npyautogui.click(x=50, y=50)\n", "original_prompt": "\u300cFile\u300d\u30e1\u30cb\u30e5\u30fc\u3092\u30af\u30ea\u30c3\u30af\u3059\u308b"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "e5e6857e-52af-4cf5-85f6-9274da51020d", "node_type": "4", "metadata": {"python_code": "import pyautogui\n\n# This example assumes the coordinates are known.\n# A more robust solution would use OCR.\npyautogui.click(x=50, y=50)\n", "original_prompt": "\u300cFile\u300d\u30e1\u30cb\u30e5\u30fc\u3092\u30af\u30ea\u30c3\u30af\u3059\u308b"}, "hash": "06407f8aad2b04bc414368e305a0636928b2727413beb717e95905d2e3682caf", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "\u300cFile\u300d\u30e1\u30cb\u30e5\u30fc\u3092\u30af\u30ea\u30c3\u30af\u3059\u308b", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 17, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "4c4cca88-be88-48b6-b9c5-559d9b349ce3": {"__data__": {"id_": "4c4cca88-be88-48b6-b9c5-559d9b349ce3", "embedding": null, "metadata": {"python_code": "from playwright.sync_api import sync_playwright\nimport time\n\nwith sync_playwright() as p:\n    browser = p.chromium.launch(headless=False)\n    page = browser.new_page()\n    page.goto('https://www.google.com')\n    # Google\u306e\u691c\u7d22\u30dc\u30c3\u30af\u30b9\u306f'q'\u3068\u3044\u3046name\u5c5e\u6027\u3092\u6301\u3063\u3066\u3044\u307e\u3059\n    search_box = page.locator('textarea[name=\"q\"]')\n    search_box.fill('\u4eca\u65e5\u306e\u5929\u6c17')\n    search_box.press('Enter')\n    time.sleep(5) # \u691c\u7d22\u7d50\u679c\u306e\u8868\u793a\u3092\u5f85\u3064\n    browser.close()\n", "original_prompt": "\u30d6\u30e9\u30a6\u30b6\u3092\u958b\u3044\u3066\u3001'\u4eca\u65e5\u306e\u5929\u6c17'\u3092\u691c\u7d22\u3057\u3066"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "72f58fca-f632-4808-9835-a3fad31b7ee6", "node_type": "4", "metadata": {"python_code": "from playwright.sync_api import sync_playwright\nimport time\n\nwith sync_playwright() as p:\n    browser = p.chromium.launch(headless=False)\n    page = browser.new_page()\n    page.goto('https://www.google.com')\n    # Google\u306e\u691c\u7d22\u30dc\u30c3\u30af\u30b9\u306f'q'\u3068\u3044\u3046name\u5c5e\u6027\u3092\u6301\u3063\u3066\u3044\u307e\u3059\n    search_box = page.locator('textarea[name=\"q\"]')\n    search_box.fill('\u4eca\u65e5\u306e\u5929\u6c17')\n    search_box.press('Enter')\n    time.sleep(5) # \u691c\u7d22\u7d50\u679c\u306e\u8868\u793a\u3092\u5f85\u3064\n    browser.close()\n", "original_prompt": "\u30d6\u30e9\u30a6\u30b6\u3092\u958b\u3044\u3066\u3001'\u4eca\u65e5\u306e\u5929\u6c17'\u3092\u691c\u7d22\u3057\u3066"}, "hash": "d439d52b1c751e775c16fc259783f75c060c4b49730f2f67d608429b3f2e03f9", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "\u30d6\u30e9\u30a6\u30b6\u3092\u958b\u3044\u3066\u3001'\u4eca\u65e5\u306e\u5929\u6c17'\u3092\u691c\u7d22\u3057\u3066", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 21, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "54c3c618-1952-4bd5-a36c-8bf7fc7bd154": {"__data__": {"id_": "54c3c618-1952-4bd5-a36c-8bf7fc7bd154", "embedding": null, "metadata": {"python_code": "from playwright.sync_api import sync_playwright\nimport time\n\nwith sync_playwright() as p:\n    # 9222\u30dd\u30fc\u30c8\u3067\u8d77\u52d5\u3057\u3066\u3044\u308b\u65e2\u5b58\u306e\u30d6\u30e9\u30a6\u30b6\u306b\u63a5\u7d9a\n    browser = p.chromium.connect_over_cdp(\"http://localhost:9222\")\n    # \u65e2\u5b58\u306e\u6700\u521d\u306e\u30bf\u30d6\uff08\u30da\u30fc\u30b8\uff09\u3092\u53d6\u5f97\n    page = browser.contexts[0].pages[0]\n    page.goto('https://www.google.com')\n    search_box = page.locator('textarea[name=\"q\"]')\n    search_box.fill('playwright')\n    search_box.press('Enter')\n    time.sleep(5)\n    # \u3053\u306e\u30b1\u30fc\u30b9\u3067\u306f\u30d6\u30e9\u30a6\u30b6\u3092\u9589\u3058\u306a\u3044\u306e\u304c\u4e00\u822c\u7684\n", "original_prompt": "\u3059\u3067\u306b\u958b\u3044\u3066\u3044\u308b\u30d6\u30e9\u30a6\u30b6\u306b\u63a5\u7d9a\u3057\u3066\u3001'playwright'\u306b\u3064\u3044\u3066\u691c\u7d22\u3057\u3066"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "0c77a126-7eb8-4cea-8163-169e3bfa51cd", "node_type": "4", "metadata": {"python_code": "from playwright.sync_api import sync_playwright\nimport time\n\nwith sync_playwright() as p:\n    # 9222\u30dd\u30fc\u30c8\u3067\u8d77\u52d5\u3057\u3066\u3044\u308b\u65e2\u5b58\u306e\u30d6\u30e9\u30a6\u30b6\u306b\u63a5\u7d9a\n    browser = p.chromium.connect_over_cdp(\"http://localhost:9222\")\n    # \u65e2\u5b58\u306e\u6700\u521d\u306e\u30bf\u30d6\uff08\u30da\u30fc\u30b8\uff09\u3092\u53d6\u5f97\n    page = browser.contexts[0].pages[0]\n    page.goto('https://www.google.com')\n    search_box = page.locator('textarea[name=\"q\"]')\n    search_box.fill('playwright')\n    search_box.press('Enter')\n    time.sleep(5)\n    # \u3053\u306e\u30b1\u30fc\u30b9\u3067\u306f\u30d6\u30e9\u30a6\u30b6\u3092\u9589\u3058\u306a\u3044\u306e\u304c\u4e00\u822c\u7684\n", "original_prompt": "\u3059\u3067\u306b\u958b\u3044\u3066\u3044\u308b\u30d6\u30e9\u30a6\u30b6\u306b\u63a5\u7d9a\u3057\u3066\u3001'playwright'\u306b\u3064\u3044\u3066\u691c\u7d22\u3057\u3066"}, "hash": "fbb8e9f99049032622cd9da9abedb202c9fedad63ce143adfeb32259680d1bc8", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "\u3059\u3067\u306b\u958b\u3044\u3066\u3044\u308b\u30d6\u30e9\u30a6\u30b6\u306b\u63a5\u7d9a\u3057\u3066\u3001'playwright'\u306b\u3064\u3044\u3066\u691c\u7d22\u3057\u3066", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 38, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "7385c552-d779-4003-b26a-40c09ef7508e": {"__data__": {"id_": "7385c552-d779-4003-b26a-40c09ef7508e", "embedding": null, "metadata": {"python_code": "import subprocess\nimport pyautogui\nimport pyperclip\nimport time\n\n# 1. Launch Notepad\nsubprocess.Popen(['notepad.exe'])\ntime.sleep(2) # Wait for the app to open\n\n# 2. Type the text\npyperclip.copy(\"\u3053\u3093\u306b\u3061\u306f\")\npyautogui.hotkey('ctrl', 'v')\n", "original_prompt": "\u30e1\u30e2\u5e33\u3092\u8d77\u52d5\u3057\u3066\u3001\u300c\u3053\u3093\u306b\u3061\u306f\u300d\u3068\u5165\u529b\u3059\u308b"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "1f182f80-8348-4015-b98b-87e335251d40", "node_type": "4", "metadata": {"python_code": "import subprocess\nimport pyautogui\nimport pyperclip\nimport time\n\n# 1. Launch Notepad\nsubprocess.Popen(['notepad.exe'])\ntime.sleep(2) # Wait for the app to open\n\n# 2. Type the text\npyperclip.copy(\"\u3053\u3093\u306b\u3061\u306f\")\npyautogui.hotkey('ctrl', 'v')\n", "original_prompt": "\u30e1\u30e2\u5e33\u3092\u8d77\u52d5\u3057\u3066\u3001\u300c\u3053\u3093\u306b\u3061\u306f\u300d\u3068\u5165\u529b\u3059\u308b"}, "hash": "0772969494deb1a5626d2bd94b138bf390c11eed21a13accb187ffb6935d81d2", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "\u30e1\u30e2\u5e33\u3092\u8d77\u52d5\u3057\u3066\u3001\u300c\u3053\u3093\u306b\u3061\u306f\u300d\u3068\u5165\u529b\u3059\u308b", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 21, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "4d012992-f35c-4787-bf3e-7b3945a74874": {"__data__": {"id_": "4d012992-f35c-4787-bf3e-7b3945a74874", "embedding": null, "metadata": {"python_code": "import subprocess\n\nsubprocess.Popen(['calc.exe'])\n", "original_prompt": "\u96fb\u5353\u3092\u8d77\u52d5\u3059\u308b"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "14bcbad6-0719-46bc-807c-76c7888c3f99", "node_type": "4", "metadata": {"python_code": "import subprocess\n\nsubprocess.Popen(['calc.exe'])\n", "original_prompt": "\u96fb\u5353\u3092\u8d77\u52d5\u3059\u308b"}, "hash": "e1a1a0f11fa94598abdb46d6c5257931f0d19ec320bcd0c141fd0f49edfffce4", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "\u96fb\u5353\u3092\u8d77\u52d5\u3059\u308b", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 7, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "75461798-5ad1-4e1a-a303-503a4eea989f": {"__data__": {"id_": "75461798-5ad1-4e1a-a303-503a4eea989f", "embedding": null, "metadata": {"python_code": "import pyautogui\n\n# This example assumes the coordinates are known.\n# A more robust solution would use OCR.\npyautogui.click(x=50, y=50)\n", "original_prompt": "\u300cFile\u300d\u30e1\u30cb\u30e5\u30fc\u3092\u30af\u30ea\u30c3\u30af\u3059\u308b"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "f56beeb3-75f6-4d8a-b4e9-97a60d184901", "node_type": "4", "metadata": {"python_code": "import pyautogui\n\n# This example assumes the coordinates are known.\n# A more robust solution would use OCR.\npyautogui.click(x=50, y=50)\n", "original_prompt": "\u300cFile\u300d\u30e1\u30cb\u30e5\u30fc\u3092\u30af\u30ea\u30c3\u30af\u3059\u308b"}, "hash": "06407f8aad2b04bc414368e305a0636928b2727413beb717e95905d2e3682caf", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "\u300cFile\u300d\u30e1\u30cb\u30e5\u30fc\u3092\u30af\u30ea\u30c3\u30af\u3059\u308b", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 17, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "26b6fc68-8a7f-48af-974a-500b7bb21b4e": {"__data__": {"id_": "26b6fc68-8a7f-48af-974a-500b7bb21b4e", "embedding": null, "metadata": {"python_code": "from playwright.sync_api import sync_playwright\nimport time\n\nwith sync_playwright() as p:\n    browser = p.chromium.launch(headless=False)\n    page = browser.new_page()\n    page.goto('https://www.google.com')\n    search_box = page.locator('textarea[name=\"q\"]')\n    search_box.fill('\u4eca\u65e5\u306e\u5929\u6c17')\n    search_box.press('Enter')\n    page.wait_for_load_state('networkidle') # \u30da\u30fc\u30b8\u306e\u8aad\u307f\u8fbc\u307f\u304c\u5b8c\u4e86\u3059\u308b\u307e\u3067\u5f85\u6a5f\n    browser.close()\n", "original_prompt": "\u30d6\u30e9\u30a6\u30b6\u3092\u958b\u3044\u3066\u3001'\u4eca\u65e5\u306e\u5929\u6c17'\u3092\u691c\u7d22\u3057\u3066"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "17bed55c-08bc-4414-83fa-e524af158345", "node_type": "4", "metadata": {"python_code": "from playwright.sync_api import sync_playwright\nimport time\n\nwith sync_playwright() as p:\n    browser = p.chromium.launch(headless=False)\n    page = browser.new_page()\n    page.goto('https://www.google.com')\n    search_box = page.locator('textarea[name=\"q\"]')\n    search_box.fill('\u4eca\u65e5\u306e\u5929\u6c17')\n    search_box.press('Enter')\n    page.wait_for_load_state('networkidle') # \u30da\u30fc\u30b8\u306e\u8aad\u307f\u8fbc\u307f\u304c\u5b8c\u4e86\u3059\u308b\u307e\u3067\u5f85\u6a5f\n    browser.close()\n", "original_prompt": "\u30d6\u30e9\u30a6\u30b6\u3092\u958b\u3044\u3066\u3001'\u4eca\u65e5\u306e\u5929\u6c17'\u3092\u691c\u7d22\u3057\u3066"}, "hash": "677f4b9693e9e5a61016731f832a7f98e528a0894c3eec8806f80999b21f482c", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "\u30d6\u30e9\u30a6\u30b6\u3092\u958b\u3044\u3066\u3001'\u4eca\u65e5\u306e\u5929\u6c17'\u3092\u691c\u7d22\u3057\u3066", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 21, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "6cb99467-75ea-40f4-9c82-9b4f1ac3989d": {"__data__": {"id_": "6cb99467-75ea-40f4-9c82-9b4f1ac3989d", "embedding": null, "metadata": {"python_code": "from playwright.sync_api import sync_playwright\nimport time\n\nwith sync_playwright() as p:\n    browser = p.chromium.connect_over_cdp(\"http://localhost:9222\")\n    page = browser.contexts[0].pages[0]\n    page.goto('https://www.google.com')\n    search_box = page.locator('textarea[name=\"q\"]')\n    search_box.fill('playwright')\n    search_box.press('Enter')\n    page.wait_for_load_state('networkidle') # \u30da\u30fc\u30b8\u306e\u8aad\u307f\u8fbc\u307f\u304c\u5b8c\u4e86\u3059\u308b\u307e\u3067\u5f85\u6a5f\n    # \u3053\u306e\u30b1\u30fc\u30b9\u3067\u306f\u30d6\u30e9\u30a6\u30b6\u3092\u9589\u3058\u306a\u3044\u306e\u304c\u4e00\u822c\u7684\n", "original_prompt": "\u3059\u3067\u306b\u958b\u3044\u3066\u3044\u308b\u30d6\u30e9\u30a6\u30b6\u306b\u63a5\u7d9a\u3057\u3066\u3001'playwright'\u306b\u3064\u3044\u3066\u691c\u7d22\u3057\u3066"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "c5288c58-f3a4-45a6-bb6e-b9056443febd", "node_type": "4", "metadata": {"python_code": "from playwright.sync_api import sync_playwright\nimport time\n\nwith sync_playwright() as p:\n    browser = p.chromium.connect_over_cdp(\"http://localhost:9222\")\n    page = browser.contexts[0].pages[0]\n    page.goto('https://www.google.com')\n    search_box = page.locator('textarea[name=\"q\"]')\n    search_box.fill('playwright')\n    search_box.press('Enter')\n    page.wait_for_load_state('networkidle') # \u30da\u30fc\u30b8\u306e\u8aad\u307f\u8fbc\u307f\u304c\u5b8c\u4e86\u3059\u308b\u307e\u3067\u5f85\u6a5f\n    # \u3053\u306e\u30b1\u30fc\u30b9\u3067\u306f\u30d6\u30e9\u30a6\u30b6\u3092\u9589\u3058\u306a\u3044\u306e\u304c\u4e00\u822c\u7684\n", "original_prompt": "\u3059\u3067\u306b\u958b\u3044\u3066\u3044\u308b\u30d6\u30e9\u30a6\u30b6\u306b\u63a5\u7d9a\u3057\u3066\u3001'playwright'\u306b\u3064\u3044\u3066\u691c\u7d22\u3057\u3066"}, "hash": "7e5a1c9213aaff344c61a652d3f111dd0d9842eaf88279773df91eed9c6822c7", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "\u3059\u3067\u306b\u958b\u3044\u3066\u3044\u308b\u30d6\u30e9\u30a6\u30b6\u306b\u63a5\u7d9a\u3057\u3066\u3001'playwright'\u306b\u3064\u3044\u3066\u691c\u7d22\u3057\u3066", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 38, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "7b04aac3-7ab1-4bc5-ae0a-8c231e58a577": {"__data__": {"id_": "7b04aac3-7ab1-4bc5-ae0a-8c231e58a577", "embedding": null, "metadata": {"python_code": "import subprocess\nimport pyautogui\nimport pyperclip\nimport time\n\n# 1. Launch Notepad\nsubprocess.Popen(['notepad.exe'])\ntime.sleep(2) # Wait for the app to open\n\n# 2. Type the text\npyperclip.copy(\"\u3053\u3093\u306b\u3061\u306f\")\npyautogui.hotkey('ctrl', 'v')\n", "original_prompt": "\u30e1\u30e2\u5e33\u3092\u8d77\u52d5\u3057\u3066\u3001\u300c\u3053\u3093\u306b\u3061\u306f\u300d\u3068\u5165\u529b\u3059\u308b"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "d61ebbf1-5c74-4123-a6a1-79c395241d46", "node_type": "4", "metadata": {"python_code": "import subprocess\nimport pyautogui\nimport pyperclip\nimport time\n\n# 1. Launch Notepad\nsubprocess.Popen(['notepad.exe'])\ntime.sleep(2) # Wait for the app to open\n\n# 2. Type the text\npyperclip.copy(\"\u3053\u3093\u306b\u3061\u306f\")\npyautogui.hotkey('ctrl', 'v')\n", "original_prompt": "\u30e1\u30e2\u5e33\u3092\u8d77\u52d5\u3057\u3066\u3001\u300c\u3053\u3093\u306b\u3061\u306f\u300d\u3068\u5165\u529b\u3059\u308b"}, "hash": "0772969494deb1a5626d2bd94b138bf390c11eed21a13accb187ffb6935d81d2", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "\u30e1\u30e2\u5e33\u3092\u8d77\u52d5\u3057\u3066\u3001\u300c\u3053\u3093\u306b\u3061\u306f\u300d\u3068\u5165\u529b\u3059\u308b", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 21, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "7bbfd32c-961f-4638-a647-2c3e4fcc28cf": {"__data__": {"id_": "7bbfd32c-961f-4638-a647-2c3e4fcc28cf", "embedding": null, "metadata": {"python_code": "import subprocess\n\nsubprocess.Popen(['calc.exe'])\n", "original_prompt": "\u96fb\u5353\u3092\u8d77\u52d5\u3059\u308b"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "3c37b652-4f51-4989-9143-f7e5614c6f4c", "node_type": "4", "metadata": {"python_code": "import subprocess\n\nsubprocess.Popen(['calc.exe'])\n", "original_prompt": "\u96fb\u5353\u3092\u8d77\u52d5\u3059\u308b"}, "hash": "e1a1a0f11fa94598abdb46d6c5257931f0d19ec320bcd0c141fd0f49edfffce4", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "\u96fb\u5353\u3092\u8d77\u52d5\u3059\u308b", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 7, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "6d10519d-28d8-4140-a588-e4cab9139f0e": {"__data__": {"id_": "6d10519d-28d8-4140-a588-e4cab9139f0e", "embedding": null, "metadata": {"python_code": "import pyautogui\n\n# This example assumes the coordinates are known.\n# A more robust solution would use OCR.\npyautogui.click(x=50, y=50)\n", "original_prompt": "\u300cFile\u300d\u30e1\u30cb\u30e5\u30fc\u3092\u30af\u30ea\u30c3\u30af\u3059\u308b"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "db7ee52f-2893-4702-b8e6-ca6e9b84930b", "node_type": "4", "metadata": {"python_code": "import pyautogui\n\n# This example assumes the coordinates are known.\n# A more robust solution would use OCR.\npyautogui.click(x=50, y=50)\n", "original_prompt": "\u300cFile\u300d\u30e1\u30cb\u30e5\u30fc\u3092\u30af\u30ea\u30c3\u30af\u3059\u308b"}, "hash": "06407f8aad2b04bc414368e305a0636928b2727413beb717e95905d2e3682caf", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "\u300cFile\u300d\u30e1\u30cb\u30e5\u30fc\u3092\u30af\u30ea\u30c3\u30af\u3059\u308b", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 17, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "dfa01486-658a-4ced-b063-2d091f6d6d83": {"__data__": {"id_": "dfa01486-658a-4ced-b063-2d091f6d6d83", "embedding": null, "metadata": {"python_code": "from playwright.sync_api import sync_playwright\nimport time\n\np = sync_playwright().start()\nbrowser = p.chromium.launch(headless=False)\npage = browser.new_page()\npage.goto('https://www.google.com')\nsearch_box = page.locator('textarea[name=\"q\"]')\nsearch_box.fill('\u4eca\u65e5\u306e\u5929\u6c17')\nsearch_box.press('Enter')\npage.wait_for_load_state('networkidle')\n# Note: Do not close the browser or stop playwright\n", "original_prompt": "\u30d6\u30e9\u30a6\u30b6\u3092\u958b\u3044\u3066\u3001'\u4eca\u65e5\u306e\u5929\u6c17'\u3092\u691c\u7d22\u3057\u3066"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "307df8e3-ef1b-431e-9b12-fdc58cb5df47", "node_type": "4", "metadata": {"python_code": "from playwright.sync_api import sync_playwright\nimport time\n\np = sync_playwright().start()\nbrowser = p.chromium.launch(headless=False)\npage = browser.new_page()\npage.goto('https://www.google.com')\nsearch_box = page.locator('textarea[name=\"q\"]')\nsearch_box.fill('\u4eca\u65e5\u306e\u5929\u6c17')\nsearch_box.press('Enter')\npage.wait_for_load_state('networkidle')\n# Note: Do not close the browser or stop playwright\n", "original_prompt": "\u30d6\u30e9\u30a6\u30b6\u3092\u958b\u3044\u3066\u3001'\u4eca\u65e5\u306e\u5929\u6c17'\u3092\u691c\u7d22\u3057\u3066"}, "hash": "301d9c328b46bc1f827d94d919e2cde7ef9f8d578be5f6f264b088c383e9bdd7", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "\u30d6\u30e9\u30a6\u30b6\u3092\u958b\u3044\u3066\u3001'\u4eca\u65e5\u306e\u5929\u6c17'\u3092\u691c\u7d22\u3057\u3066", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 21, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "8a094b6b-b03e-41e8-aea0-83885473da07": {"__data__": {"id_": "8a094b6b-b03e-41e8-aea0-83885473da07", "embedding": null, "metadata": {"python_code": "from playwright.sync_api import sync_playwright\nimport time\n\np = sync_playwright().start()\nbrowser = p.chromium.connect_over_cdp(\"http://localhost:9222\")\npage = browser.contexts[0].pages[0]\npage.goto('https://www.google.com')\nsearch_box = page.locator('textarea[name=\"q\"]')\nsearch_box.fill('playwright')\nsearch_box.press('Enter')\npage.wait_for_load_state('networkidle')\n# Note: Do not close the browser or stop playwright\n", "original_prompt": "\u3059\u3067\u306b\u958b\u3044\u3066\u3044\u308b\u30d6\u30e9\u30a6\u30b6\u306b\u63a5\u7d9a\u3057\u3066\u3001'playwright'\u306b\u3064\u3044\u3066\u691c\u7d22\u3057\u3066"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "af46dbf2-0257-4dc9-bd78-89bde2d772cd", "node_type": "4", "metadata": {"python_code": "from playwright.sync_api import sync_playwright\nimport time\n\np = sync_playwright().start()\nbrowser = p.chromium.connect_over_cdp(\"http://localhost:9222\")\npage = browser.contexts[0].pages[0]\npage.goto('https://www.google.com')\nsearch_box = page.locator('textarea[name=\"q\"]')\nsearch_box.fill('playwright')\nsearch_box.press('Enter')\npage.wait_for_load_state('networkidle')\n# Note: Do not close the browser or stop playwright\n", "original_prompt": "\u3059\u3067\u306b\u958b\u3044\u3066\u3044\u308b\u30d6\u30e9\u30a6\u30b6\u306b\u63a5\u7d9a\u3057\u3066\u3001'playwright'\u306b\u3064\u3044\u3066\u691c\u7d22\u3057\u3066"}, "hash": "8f8dc5c80fcf0713ef0d0af74f5ddbd27674ee4e78c205b99617822805cc0236", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "\u3059\u3067\u306b\u958b\u3044\u3066\u3044\u308b\u30d6\u30e9\u30a6\u30b6\u306b\u63a5\u7d9a\u3057\u3066\u3001'playwright'\u306b\u3064\u3044\u3066\u691c\u7d22\u3057\u3066", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 38, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "ca8d9435-a66a-4b8e-af68-8650383c9362": {"__data__": {"id_": "ca8d9435-a66a-4b8e-af68-8650383c9362", "embedding": null, "metadata": {"python_code": "import subprocess\nimport pyautogui\nimport pyperclip\nimport time\n\nsubprocess.Popen(['notepad.exe'])\ntime.sleep(2)\npyperclip.copy(\"\u3053\u3093\u306b\u3061\u306f\")\npyautogui.hotkey('ctrl', 'v')\n", "original_prompt": "\u30e1\u30e2\u5e33\u3092\u8d77\u52d5\u3057\u3066\u3001\u300c\u3053\u3093\u306b\u3061\u306f\u300d\u3068\u5165\u529b\u3059\u308b"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "adf09a0a-0d54-46b8-9878-1dcab0251bd5", "node_type": "4", "metadata": {"python_code": "import subprocess\nimport pyautogui\nimport pyperclip\nimport time\n\nsubprocess.Popen(['notepad.exe'])\ntime.sleep(2)\npyperclip.copy(\"\u3053\u3093\u306b\u3061\u306f\")\npyautogui.hotkey('ctrl', 'v')\n", "original_prompt": "\u30e1\u30e2\u5e33\u3092\u8d77\u52d5\u3057\u3066\u3001\u300c\u3053\u3093\u306b\u3061\u306f\u300d\u3068\u5165\u529b\u3059\u308b"}, "hash": "0a6d4d1c3cbb6bdf00555bac7fdb44f4b35da8694925004b7fd7d9413f3aa43a", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "\u30e1\u30e2\u5e33\u3092\u8d77\u52d5\u3057\u3066\u3001\u300c\u3053\u3093\u306b\u3061\u306f\u300d\u3068\u5165\u529b\u3059\u308b", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 21, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "7a1e7023-ed1f-4630-8c7b-4ccf3cf0bb3b": {"__data__": {"id_": "7a1e7023-ed1f-4630-8c7b-4ccf3cf0bb3b", "embedding": null, "metadata": {"python_code": "import subprocess\n\nsubprocess.Popen(['calc.exe'])\n", "original_prompt": "\u96fb\u5353\u3092\u8d77\u52d5\u3059\u308b"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "298d0550-5f65-438b-867e-9b19c8b0105e", "node_type": "4", "metadata": {"python_code": "import subprocess\n\nsubprocess.Popen(['calc.exe'])\n", "original_prompt": "\u96fb\u5353\u3092\u8d77\u52d5\u3059\u308b"}, "hash": "e1a1a0f11fa94598abdb46d6c5257931f0d19ec320bcd0c141fd0f49edfffce4", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "\u96fb\u5353\u3092\u8d77\u52d5\u3059\u308b", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 7, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "06b155c0-bca2-4f73-8ed8-02a2a1839f58": {"__data__": {"id_": "06b155c0-bca2-4f73-8ed8-02a2a1839f58", "embedding": null, "metadata": {"python_code": "import asyncio\nfrom playwright.async_api import async_playwright\n\nasync def main():\n    async with async_playwright() as p:\n        browser = await p.chromium.launch(headless=False)\n        page = await browser.new_page()\n        await page.goto('https://www.google.com')\n        search_box = page.locator('textarea[name=\"q\"]')\n        await search_box.fill('\u4eca\u65e5\u306e\u5929\u6c17')\n        await search_box.press('Enter')\n        await page.wait_for_load_state('networkidle')\n        # Keep browser open to see the result\n        await page.pause()\n\nif __name__ == '__main__':\n    asyncio.run(main())\n", "original_prompt": "\u30d6\u30e9\u30a6\u30b6\u3092\u958b\u3044\u3066\u3001'\u4eca\u65e5\u306e\u5929\u6c17'\u3092\u691c\u7d22\u3057\u3066"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "f9043947-45e4-4cf3-b5db-b106c2ad0b50", "node_type": "4", "metadata": {"python_code": "import asyncio\nfrom playwright.async_api import async_playwright\n\nasync def main():\n    async with async_playwright() as p:\n        browser = await p.chromium.launch(headless=False)\n        page = await browser.new_page()\n        await page.goto('https://www.google.com')\n        search_box = page.locator('textarea[name=\"q\"]')\n        await search_box.fill('\u4eca\u65e5\u306e\u5929\u6c17')\n        await search_box.press('Enter')\n        await page.wait_for_load_state('networkidle')\n        # Keep browser open to see the result\n        await page.pause()\n\nif __name__ == '__main__':\n    asyncio.run(main())\n", "original_prompt": "\u30d6\u30e9\u30a6\u30b6\u3092\u958b\u3044\u3066\u3001'\u4eca\u65e5\u306e\u5929\u6c17'\u3092\u691c\u7d22\u3057\u3066"}, "hash": "32023a9ed50d462316db6f642a5ba86e466388a28aab98e057eb2579b8bfab20", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "\u30d6\u30e9\u30a6\u30b6\u3092\u958b\u3044\u3066\u3001'\u4eca\u65e5\u306e\u5929\u6c17'\u3092\u691c\u7d22\u3057\u3066", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 21, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "ca819f34-02b9-41bb-9bb2-6d21e2069b22": {"__data__": {"id_": "ca819f34-02b9-41bb-9bb2-6d21e2069b22", "embedding": null, "metadata": {"python_code": "import asyncio\nfrom playwright.async_api import async_playwright\n\nasync def main():\n    async with async_playwright() as p:\n        browser = await p.chromium.connect_over_cdp(\"http://localhost:9222\")\n        page = browser.contexts[0].pages[0]\n        await page.goto('https://www.google.com')\n        search_box = page.locator('textarea[name=\"q\"]')\n        await search_box.fill('playwright')\n        await search_box.press('Enter')\n        await page.wait_for_load_state('networkidle')\n        # Keep browser open to see the result\n        await page.pause()\n\nif __name__ == '__main__':\n    asyncio.run(main())\n", "original_prompt": "\u3059\u3067\u306b\u958b\u3044\u3066\u3044\u308b\u30d6\u30e9\u30a6\u30b6\u306b\u63a5\u7d9a\u3057\u3066\u3001'playwright'\u306b\u3064\u3044\u3066\u691c\u7d22\u3057\u3066"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "938e4069-2bb9-4af2-bd0c-431d6b544513", "node_type": "4", "metadata": {"python_code": "import asyncio\nfrom playwright.async_api import async_playwright\n\nasync def main():\n    async with async_playwright() as p:\n        browser = await p.chromium.connect_over_cdp(\"http://localhost:9222\")\n        page = browser.contexts[0].pages[0]\n        await page.goto('https://www.google.com')\n        search_box = page.locator('textarea[name=\"q\"]')\n        await search_box.fill('playwright')\n        await search_box.press('Enter')\n        await page.wait_for_load_state('networkidle')\n        # Keep browser open to see the result\n        await page.pause()\n\nif __name__ == '__main__':\n    asyncio.run(main())\n", "original_prompt": "\u3059\u3067\u306b\u958b\u3044\u3066\u3044\u308b\u30d6\u30e9\u30a6\u30b6\u306b\u63a5\u7d9a\u3057\u3066\u3001'playwright'\u306b\u3064\u3044\u3066\u691c\u7d22\u3057\u3066"}, "hash": "cee842b21747d1064b8d857fe8a885578cd8a7938fd6e5c88f7671d7a2abcd36", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "\u3059\u3067\u306b\u958b\u3044\u3066\u3044\u308b\u30d6\u30e9\u30a6\u30b6\u306b\u63a5\u7d9a\u3057\u3066\u3001'playwright'\u306b\u3064\u3044\u3066\u691c\u7d22\u3057\u3066", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 38, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "7d22b06e-423f-449f-80b1-63f7eef48976": {"__data__": {"id_": "7d22b06e-423f-449f-80b1-63f7eef48976", "embedding": null, "metadata": {"python_code": "import subprocess\nimport pyautogui\nimport pyperclip\nimport time\nimport pygetwindow as gw\n\n# Try to find an existing Notepad window\nnotepad_windows = gw.getWindowsWithTitle('Notepad')\nif notepad_windows:\n    # Activate the first found window\n    notepad_windows[0].activate()\n    time.sleep(1)\nelse:\n    # Launch Notepad if no window is found\n    subprocess.Popen(['notepad.exe'])\n    time.sleep(2)\n\npyperclip.copy(\"\u3053\u3093\u306b\u3061\u306f\")\npyautogui.hotkey('ctrl', 'v')\n", "original_prompt": "\u30e1\u30e2\u5e33\u3092\u8d77\u52d5\u3057\u3066\u3001\u300c\u3053\u3093\u306b\u3061\u306f\u300d\u3068\u5165\u529b\u3059\u308b"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "fa96f3c6-e8ab-4b1b-b3d1-c9fb3f737f0f", "node_type": "4", "metadata": {"python_code": "import subprocess\nimport pyautogui\nimport pyperclip\nimport time\nimport pygetwindow as gw\n\n# Try to find an existing Notepad window\nnotepad_windows = gw.getWindowsWithTitle('Notepad')\nif notepad_windows:\n    # Activate the first found window\n    notepad_windows[0].activate()\n    time.sleep(1)\nelse:\n    # Launch Notepad if no window is found\n    subprocess.Popen(['notepad.exe'])\n    time.sleep(2)\n\npyperclip.copy(\"\u3053\u3093\u306b\u3061\u306f\")\npyautogui.hotkey('ctrl', 'v')\n", "original_prompt": "\u30e1\u30e2\u5e33\u3092\u8d77\u52d5\u3057\u3066\u3001\u300c\u3053\u3093\u306b\u3061\u306f\u300d\u3068\u5165\u529b\u3059\u308b"}, "hash": "37901216be4aaae98ab0b0ab5d0a6783bd1d9d6ba8ab75a473fb7d56d9248643", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "\u30e1\u30e2\u5e33\u3092\u8d77\u52d5\u3057\u3066\u3001\u300c\u3053\u3093\u306b\u3061\u306f\u300d\u3068\u5165\u529b\u3059\u308b", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 21, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "cdb05aaf-569f-45b8-b9d5-73aaf0f0a9e6": {"__data__": {"id_": "cdb05aaf-569f-45b8-b9d5-73aaf0f0a9e6", "embedding": null, "metadata": {"python_code": "import subprocess\nimport time\nimport pygetwindow as gw\n\n# Try to find an existing Calculator window\ncalc_windows = gw.getWindowsWithTitle('Calculator')\nif calc_windows:\n    # Activate the first found window\n    calc_windows[0].activate()\n    time.sleep(1)\nelse:\n    # Launch Calculator if no window is found\n    subprocess.Popen(['calc.exe'])\n    time.sleep(2)\n", "original_prompt": "\u96fb\u5353\u3092\u8d77\u52d5\u3059\u308b"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "8aab9cbd-83e8-4409-843d-320f6cf75359", "node_type": "4", "metadata": {"python_code": "import subprocess\nimport time\nimport pygetwindow as gw\n\n# Try to find an existing Calculator window\ncalc_windows = gw.getWindowsWithTitle('Calculator')\nif calc_windows:\n    # Activate the first found window\n    calc_windows[0].activate()\n    time.sleep(1)\nelse:\n    # Launch Calculator if no window is found\n    subprocess.Popen(['calc.exe'])\n    time.sleep(2)\n", "original_prompt": "\u96fb\u5353\u3092\u8d77\u52d5\u3059\u308b"}, "hash": "a411b1b5a444dc56d1fa75629123393c0d6cedef38ce57850ea2674ffc4270b9", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "\u96fb\u5353\u3092\u8d77\u52d5\u3059\u308b", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 7, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "40a02ba8-2605-42bb-81cb-68868dc365d9": {"__data__": {"id_": "40a02ba8-2605-42bb-81cb-68868dc365d9", "embedding": null, "metadata": {"python_code": "import asyncio\nimport nest_asyncio\nfrom playwright.async_api import async_playwright\n\nnest_asyncio.apply()\n\nasync def main():\n    async with async_playwright() as p:\n        browser = await p.chromium.launch(headless=False)\n        page = await browser.new_page()\n        await page.goto('https://www.google.com')\n        search_box = page.locator('textarea[name=\\\"q\\\"]')\n        await search_box.fill('\u4eca\u65e5\u306e\u5929\u6c17')\n        await page.wait_for_timeout(1000) # Wait to avoid reCAPTCHA\n        await search_box.press('Enter')\n        await page.wait_for_load_state('networkidle')\n        # Pause to keep the browser open\n        await page.pause()\n\nasyncio.run(main())\n", "original_prompt": "\u30d6\u30e9\u30a6\u30b6\u3092\u958b\u3044\u3066\u3001'\u4eca\u65e5\u306e\u5929\u6c17'\u3092\u691c\u7d22\u3057\u3066"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "fd4d577e-77aa-4f95-ba1c-89e560bfa739", "node_type": "4", "metadata": {"python_code": "import asyncio\nimport nest_asyncio\nfrom playwright.async_api import async_playwright\n\nnest_asyncio.apply()\n\nasync def main():\n    async with async_playwright() as p:\n        browser = await p.chromium.launch(headless=False)\n        page = await browser.new_page()\n        await page.goto('https://www.google.com')\n        search_box = page.locator('textarea[name=\\\"q\\\"]')\n        await search_box.fill('\u4eca\u65e5\u306e\u5929\u6c17')\n        await page.wait_for_timeout(1000) # Wait to avoid reCAPTCHA\n        await search_box.press('Enter')\n        await page.wait_for_load_state('networkidle')\n        # Pause to keep the browser open\n        await page.pause()\n\nasyncio.run(main())\n", "original_prompt": "\u30d6\u30e9\u30a6\u30b6\u3092\u958b\u3044\u3066\u3001'\u4eca\u65e5\u306e\u5929\u6c17'\u3092\u691c\u7d22\u3057\u3066"}, "hash": "26591e4bdbdcbfa2cc7ea513575e9587f0755fec284dba8e78baedfe37999470", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "\u30d6\u30e9\u30a6\u30b6\u3092\u958b\u3044\u3066\u3001'\u4eca\u65e5\u306e\u5929\u6c17'\u3092\u691c\u7d22\u3057\u3066", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 21, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "a3ea6649-f7a1-4ff2-bb57-9f2a6ce52e69": {"__data__": {"id_": "a3ea6649-f7a1-4ff2-bb57-9f2a6ce52e69", "embedding": null, "metadata": {"python_code": "import asyncio\nimport nest_asyncio\nfrom playwright.async_api import async_playwright\n\nnest_asyncio.apply()\n\nasync def main():\n    async with async_playwright() as p:\n        browser = await p.chromium.connect_over_cdp(\"http://localhost:9222\")\n        page = browser.contexts[0].pages[0]\n        await page.goto('https://www.google.com')\n        search_box = page.locator('textarea[name=\\\"q\\\"]')\n        await search_box.fill('playwright')\n        await page.wait_for_timeout(1000) # Wait to avoid reCAPTCHA\n        await search_box.press('Enter')\n        await page.wait_for_load_state('networkidle')\n        # Pause to keep the browser open\n        await page.pause()\n\nasyncio.run(main())\n", "original_prompt": "\u3059\u3067\u306b\u958b\u3044\u3066\u3044\u308b\u30d6\u30e9\u30a6\u30b6\u306b\u63a5\u7d9a\u3057\u3066\u3001'playwright'\u306b\u3064\u3044\u3066\u691c\u7d22\u3057\u3066"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "917ffb3f-1e86-4cf6-837a-6c9ec30ee8bb", "node_type": "4", "metadata": {"python_code": "import asyncio\nimport nest_asyncio\nfrom playwright.async_api import async_playwright\n\nnest_asyncio.apply()\n\nasync def main():\n    async with async_playwright() as p:\n        browser = await p.chromium.connect_over_cdp(\"http://localhost:9222\")\n        page = browser.contexts[0].pages[0]\n        await page.goto('https://www.google.com')\n        search_box = page.locator('textarea[name=\\\"q\\\"]')\n        await search_box.fill('playwright')\n        await page.wait_for_timeout(1000) # Wait to avoid reCAPTCHA\n        await search_box.press('Enter')\n        await page.wait_for_load_state('networkidle')\n        # Pause to keep the browser open\n        await page.pause()\n\nasyncio.run(main())\n", "original_prompt": "\u3059\u3067\u306b\u958b\u3044\u3066\u3044\u308b\u30d6\u30e9\u30a6\u30b6\u306b\u63a5\u7d9a\u3057\u3066\u3001'playwright'\u306b\u3064\u3044\u3066\u691c\u7d22\u3057\u3066"}, "hash": "cdee7a95067aea7937c919a1b4b080b31eecb8644d0f7386f86fb2d423dbf1f8", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "\u3059\u3067\u306b\u958b\u3044\u3066\u3044\u308b\u30d6\u30e9\u30a6\u30b6\u306b\u63a5\u7d9a\u3057\u3066\u3001'playwright'\u306b\u3064\u3044\u3066\u691c\u7d22\u3057\u3066", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 38, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "d3b54230-6220-4ca5-bae4-baecc66b54df": {"__data__": {"id_": "d3b54230-6220-4ca5-bae4-baecc66b54df", "embedding": null, "metadata": {"python_code": "import subprocess\nimport pyautogui\nimport pyperclip\nimport time\nimport pygetwindow as gw\n\n# Try to find an existing Notepad window\nnotepad_windows = gw.getWindowsWithTitle('Notepad')\nif notepad_windows:\n    # Activate the first found window\n    notepad_windows[0].activate()\n    time.sleep(1)\nelse:\n    # Launch Notepad if no window is found\n    subprocess.Popen(['notepad.exe'])\n    time.sleep(2)\n\npyperclip.copy(\"\u3053\u3093\u306b\u3061\u306f\")\npyautogui.hotkey('ctrl', 'v')\n", "original_prompt": "\u30e1\u30e2\u5e33\u3092\u8d77\u52d5\u3057\u3066\u3001\u300c\u3053\u3093\u306b\u3061\u306f\u300d\u3068\u5165\u529b\u3059\u308b"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "5878c162-4272-4547-bd6d-5c130cce3aa3", "node_type": "4", "metadata": {"python_code": "import subprocess\nimport pyautogui\nimport pyperclip\nimport time\nimport pygetwindow as gw\n\n# Try to find an existing Notepad window\nnotepad_windows = gw.getWindowsWithTitle('Notepad')\nif notepad_windows:\n    # Activate the first found window\n    notepad_windows[0].activate()\n    time.sleep(1)\nelse:\n    # Launch Notepad if no window is found\n    subprocess.Popen(['notepad.exe'])\n    time.sleep(2)\n\npyperclip.copy(\"\u3053\u3093\u306b\u3061\u306f\")\npyautogui.hotkey('ctrl', 'v')\n", "original_prompt": "\u30e1\u30e2\u5e33\u3092\u8d77\u52d5\u3057\u3066\u3001\u300c\u3053\u3093\u306b\u3061\u306f\u300d\u3068\u5165\u529b\u3059\u308b"}, "hash": "37901216be4aaae98ab0b0ab5d0a6783bd1d9d6ba8ab75a473fb7d56d9248643", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "\u30e1\u30e2\u5e33\u3092\u8d77\u52d5\u3057\u3066\u3001\u300c\u3053\u3093\u306b\u3061\u306f\u300d\u3068\u5165\u529b\u3059\u308b", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 21, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "52f1b6a5-2760-4e5f-b5ae-5df957da5d04": {"__data__": {"id_": "52f1b6a5-2760-4e5f-b5ae-5df957da5d04", "embedding": null, "metadata": {"python_code": "import subprocess\nimport time\nimport pygetwindow as gw\n\n# Try to find an existing Calculator window\ncalc_windows = gw.getWindowsWithTitle('Calculator')\nif calc_windows:\n    # Activate the first found window\n    calc_windows[0].activate()\n    time.sleep(1)\nelse:\n    # Launch Calculator if no window is found\n    subprocess.Popen(['calc.exe'])\n    time.sleep(2)\n", "original_prompt": "\u96fb\u5353\u3092\u8d77\u52d5\u3059\u308b"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "d10dd478-78ee-49e8-84f6-d8bbcbc9ac1b", "node_type": "4", "metadata": {"python_code": "import subprocess\nimport time\nimport pygetwindow as gw\n\n# Try to find an existing Calculator window\ncalc_windows = gw.getWindowsWithTitle('Calculator')\nif calc_windows:\n    # Activate the first found window\n    calc_windows[0].activate()\n    time.sleep(1)\nelse:\n    # Launch Calculator if no window is found\n    subprocess.Popen(['calc.exe'])\n    time.sleep(2)\n", "original_prompt": "\u96fb\u5353\u3092\u8d77\u52d5\u3059\u308b"}, "hash": "a411b1b5a444dc56d1fa75629123393c0d6cedef38ce57850ea2674ffc4270b9", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "\u96fb\u5353\u3092\u8d77\u52d5\u3059\u308b", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 7, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "3896c358-acb8-43c9-9031-e8514aba61a5": {"__data__": {"id_": "3896c358-acb8-43c9-9031-e8514aba61a5", "embedding": null, "metadata": {"python_code": "import asyncio\nimport nest_asyncio\nfrom playwright.async_api import async_playwright\n\nnest_asyncio.apply()\n\nasync def main():\n    async with async_playwright() as p:\n        browser = await p.chromium.launch(headless=False)\n        page = await browser.new_page()\n        await page.goto('https://www.google.com')\n        search_box = page.get_by_role(\"searchbox\", name=\"q\")\n        await search_box.fill('\u4eca\u65e5\u306e\u5929\u6c17')\n        await page.wait_for_timeout(1000) # Wait to avoid reCAPTCHA\n        await search_box.press('Enter')\n        await page.wait_for_load_state('networkidle')\n        # Keep the browser open indefinitely\n        await asyncio.Future()\n\nasyncio.run(main())\n", "original_prompt": "\u30d6\u30e9\u30a6\u30b6\u3092\u958b\u3044\u3066\u3001'\u4eca\u65e5\u306e\u5929\u6c17'\u3092\u691c\u7d22\u3057\u3066"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "38b239ba-13ba-40a1-9e02-12281ad49f61", "node_type": "4", "metadata": {"python_code": "import asyncio\nimport nest_asyncio\nfrom playwright.async_api import async_playwright\n\nnest_asyncio.apply()\n\nasync def main():\n    async with async_playwright() as p:\n        browser = await p.chromium.launch(headless=False)\n        page = await browser.new_page()\n        await page.goto('https://www.google.com')\n        search_box = page.get_by_role(\"searchbox\", name=\"q\")\n        await search_box.fill('\u4eca\u65e5\u306e\u5929\u6c17')\n        await page.wait_for_timeout(1000) # Wait to avoid reCAPTCHA\n        await search_box.press('Enter')\n        await page.wait_for_load_state('networkidle')\n        # Keep the browser open indefinitely\n        await asyncio.Future()\n\nasyncio.run(main())\n", "original_prompt": "\u30d6\u30e9\u30a6\u30b6\u3092\u958b\u3044\u3066\u3001'\u4eca\u65e5\u306e\u5929\u6c17'\u3092\u691c\u7d22\u3057\u3066"}, "hash": "0cd06b62e5a059e3aadd4170a2f323ab518cb4ce89dc059694167b1a27373706", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "\u30d6\u30e9\u30a6\u30b6\u3092\u958b\u3044\u3066\u3001'\u4eca\u65e5\u306e\u5929\u6c17'\u3092\u691c\u7d22\u3057\u3066", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 21, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "322d2080-65f9-41a4-ae03-e94a97f585a3": {"__data__": {"id_": "322d2080-65f9-41a4-ae03-e94a97f585a3", "embedding": null, "metadata": {"python_code": "import asyncio\nimport nest_asyncio\nfrom playwright.async_api import async_playwright\n\nnest_asyncio.apply()\n\nasync def main():\n    async with async_playwright() as p:\n        browser = await p.chromium.launch(headless=False)\n        page = await browser.new_page()\n        await page.goto('https://www.yahoo.co.jp')\n        # Use a robust, role-based selector for Yahoo's search box\n        search_box = page.locator('[role=\"search\"] input[type=\"search\"]')\n        await search_box.fill('\u6700\u65b0\u30cb\u30e5\u30fc\u30b9')\n        await page.wait_for_timeout(1000) # Wait to avoid reCAPTCHA\n        await search_box.press('Enter')\n        await page.wait_for_load_state('networkidle')\n        # Keep the browser open indefinitely\n        await asyncio.Future()\n\nasyncio.run(main())\n", "original_prompt": "Yahoo! JAPAN\u3067\u300c\u6700\u65b0\u30cb\u30e5\u30fc\u30b9\u300d\u3092\u691c\u7d22\u3057\u3066"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "46e53510-9843-4e51-a144-70b9e4c18a38", "node_type": "4", "metadata": {"python_code": "import asyncio\nimport nest_asyncio\nfrom playwright.async_api import async_playwright\n\nnest_asyncio.apply()\n\nasync def main():\n    async with async_playwright() as p:\n        browser = await p.chromium.launch(headless=False)\n        page = await browser.new_page()\n        await page.goto('https://www.yahoo.co.jp')\n        # Use a robust, role-based selector for Yahoo's search box\n        search_box = page.locator('[role=\"search\"] input[type=\"search\"]')\n        await search_box.fill('\u6700\u65b0\u30cb\u30e5\u30fc\u30b9')\n        await page.wait_for_timeout(1000) # Wait to avoid reCAPTCHA\n        await search_box.press('Enter')\n        await page.wait_for_load_state('networkidle')\n        # Keep the browser open indefinitely\n        await asyncio.Future()\n\nasyncio.run(main())\n", "original_prompt": "Yahoo! JAPAN\u3067\u300c\u6700\u65b0\u30cb\u30e5\u30fc\u30b9\u300d\u3092\u691c\u7d22\u3057\u3066"}, "hash": "721d15fa37d7f8338ff5944e40e024514f0ba437a4744aa0e9795fcb6ce3cee5", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Yahoo! JAPAN\u3067\u300c\u6700\u65b0\u30cb\u30e5\u30fc\u30b9\u300d\u3092\u691c\u7d22\u3057\u3066", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 26, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}}, "docstore/metadata": {"ce5683cb-7f59-4c4d-88d1-965d4ecba183": {"doc_hash": "6e8c187c847e44c73648079febe8bfe437b79203e13ab3640c7ecb188671ba28", "ref_doc_id": "cf1d3d3a-fdb3-4af6-825a-cf20aa5a7db7"}, "cf1d3d3a-fdb3-4af6-825a-cf20aa5a7db7": {"doc_hash": "0772969494deb1a5626d2bd94b138bf390c11eed21a13accb187ffb6935d81d2"}, "fef7d30a-efce-4c8d-b80b-4e267993b205": {"doc_hash": "4acf08bba46be8dc4cf3697ca83ed2c682fac2d7acf78adef18d4d76285010a0", "ref_doc_id": "fdf755a7-5f50-4b50-a9a1-9ed35636c886"}, "fdf755a7-5f50-4b50-a9a1-9ed35636c886": {"doc_hash": "e1a1a0f11fa94598abdb46d6c5257931f0d19ec320bcd0c141fd0f49edfffce4"}, "f4ee5d7b-9a07-4498-939b-c225c0b782d3": {"doc_hash": "e5a94ef1c75491f6ab1724608d27a82ad83e7220ecfd7ab5a34c61fe19532794", "ref_doc_id": "f321fda4-41ec-4ba4-a919-336227f6711e"}, "f321fda4-41ec-4ba4-a919-336227f6711e": {"doc_hash": "06407f8aad2b04bc414368e305a0636928b2727413beb717e95905d2e3682caf"}, "899d4655-429f-40d1-a231-5d178dde75d9": {"doc_hash": "0df4ff164f3e9a11da2a1434815d6c7aad3168183ca376d0607038b7d4a7fa91", "ref_doc_id": "0a215a5e-877b-4df8-9551-715d247cba77"}, "0a215a5e-877b-4df8-9551-715d247cba77": {"doc_hash": "d439d52b1c751e775c16fc259783f75c060c4b49730f2f67d608429b3f2e03f9"}, "98833baf-cce1-4c0e-968e-9c8a92d6c610": {"doc_hash": "6e8c187c847e44c73648079febe8bfe437b79203e13ab3640c7ecb188671ba28", "ref_doc_id": "b49103a1-6cd4-4783-a73c-f72d342383b3"}, "b49103a1-6cd4-4783-a73c-f72d342383b3": {"doc_hash": "0772969494deb1a5626d2bd94b138bf390c11eed21a13accb187ffb6935d81d2"}, "811bf4ff-7cfe-419c-a9a0-8e1ba378735a": {"doc_hash": "4acf08bba46be8dc4cf3697ca83ed2c682fac2d7acf78adef18d4d76285010a0", "ref_doc_id": "ad519a9b-1eb8-4ec5-af04-f233b345cf30"}, "ad519a9b-1eb8-4ec5-af04-f233b345cf30": {"doc_hash": "e1a1a0f11fa94598abdb46d6c5257931f0d19ec320bcd0c141fd0f49edfffce4"}, "2899731a-4e42-4d2b-9031-51646a18d048": {"doc_hash": "e5a94ef1c75491f6ab1724608d27a82ad83e7220ecfd7ab5a34c61fe19532794", "ref_doc_id": "e5e6857e-52af-4cf5-85f6-9274da51020d"}, "e5e6857e-52af-4cf5-85f6-9274da51020d": {"doc_hash": "06407f8aad2b04bc414368e305a0636928b2727413beb717e95905d2e3682caf"}, "4c4cca88-be88-48b6-b9c5-559d9b349ce3": {"doc_hash": "0df4ff164f3e9a11da2a1434815d6c7aad3168183ca376d0607038b7d4a7fa91", "ref_doc_id": "72f58fca-f632-4808-9835-a3fad31b7ee6"}, "72f58fca-f632-4808-9835-a3fad31b7ee6": {"doc_hash": "d439d52b1c751e775c16fc259783f75c060c4b49730f2f67d608429b3f2e03f9"}, "54c3c618-1952-4bd5-a36c-8bf7fc7bd154": {"doc_hash": "acd9a30b478b7fe401f022efac9428278f04d91631e8ad4020ef2c9b1536524d", "ref_doc_id": "0c77a126-7eb8-4cea-8163-169e3bfa51cd"}, "0c77a126-7eb8-4cea-8163-169e3bfa51cd": {"doc_hash": "fbb8e9f99049032622cd9da9abedb202c9fedad63ce143adfeb32259680d1bc8"}, "7385c552-d779-4003-b26a-40c09ef7508e": {"doc_hash": "6e8c187c847e44c73648079febe8bfe437b79203e13ab3640c7ecb188671ba28", "ref_doc_id": "1f182f80-8348-4015-b98b-87e335251d40"}, "1f182f80-8348-4015-b98b-87e335251d40": {"doc_hash": "0772969494deb1a5626d2bd94b138bf390c11eed21a13accb187ffb6935d81d2"}, "4d012992-f35c-4787-bf3e-7b3945a74874": {"doc_hash": "4acf08bba46be8dc4cf3697ca83ed2c682fac2d7acf78adef18d4d76285010a0", "ref_doc_id": "14bcbad6-0719-46bc-807c-76c7888c3f99"}, "14bcbad6-0719-46bc-807c-76c7888c3f99": {"doc_hash": "e1a1a0f11fa94598abdb46d6c5257931f0d19ec320bcd0c141fd0f49edfffce4"}, "75461798-5ad1-4e1a-a303-503a4eea989f": {"doc_hash": "e5a94ef1c75491f6ab1724608d27a82ad83e7220ecfd7ab5a34c61fe19532794", "ref_doc_id": "f56beeb3-75f6-4d8a-b4e9-97a60d184901"}, "f56beeb3-75f6-4d8a-b4e9-97a60d184901": {"doc_hash": "06407f8aad2b04bc414368e305a0636928b2727413beb717e95905d2e3682caf"}, "26b6fc68-8a7f-48af-974a-500b7bb21b4e": {"doc_hash": "ecbaff5e38d0561816c84bc812c9f8c9fadd2f5dd0ecd1d27d0538f8c121fe97", "ref_doc_id": "17bed55c-08bc-4414-83fa-e524af158345"}, "17bed55c-08bc-4414-83fa-e524af158345": {"doc_hash": "677f4b9693e9e5a61016731f832a7f98e528a0894c3eec8806f80999b21f482c"}, "6cb99467-75ea-40f4-9c82-9b4f1ac3989d": {"doc_hash": "f27ca93c8cce8c3a9182d674bbaab8cf33e507e559f23af2c197e7ab6fac51d3", "ref_doc_id": "c5288c58-f3a4-45a6-bb6e-b9056443febd"}, "c5288c58-f3a4-45a6-bb6e-b9056443febd": {"doc_hash": "7e5a1c9213aaff344c61a652d3f111dd0d9842eaf88279773df91eed9c6822c7"}, "7b04aac3-7ab1-4bc5-ae0a-8c231e58a577": {"doc_hash": "6e8c187c847e44c73648079febe8bfe437b79203e13ab3640c7ecb188671ba28", "ref_doc_id": "d61ebbf1-5c74-4123-a6a1-79c395241d46"}, "d61ebbf1-5c74-4123-a6a1-79c395241d46": {"doc_hash": "0772969494deb1a5626d2bd94b138bf390c11eed21a13accb187ffb6935d81d2"}, "7bbfd32c-961f-4638-a647-2c3e4fcc28cf": {"doc_hash": "4acf08bba46be8dc4cf3697ca83ed2c682fac2d7acf78adef18d4d76285010a0", "ref_doc_id": "3c37b652-4f51-4989-9143-f7e5614c6f4c"}, "3c37b652-4f51-4989-9143-f7e5614c6f4c": {"doc_hash": "e1a1a0f11fa94598abdb46d6c5257931f0d19ec320bcd0c141fd0f49edfffce4"}, "6d10519d-28d8-4140-a588-e4cab9139f0e": {"doc_hash": "e5a94ef1c75491f6ab1724608d27a82ad83e7220ecfd7ab5a34c61fe19532794", "ref_doc_id": "db7ee52f-2893-4702-b8e6-ca6e9b84930b"}, "db7ee52f-2893-4702-b8e6-ca6e9b84930b": {"doc_hash": "06407f8aad2b04bc414368e305a0636928b2727413beb717e95905d2e3682caf"}, "dfa01486-658a-4ced-b063-2d091f6d6d83": {"doc_hash": "467ecb21a07f902400254d241dfaf2ec6be1d6472aa58d7e17593e93037a1444", "ref_doc_id": "307df8e3-ef1b-431e-9b12-fdc58cb5df47"}, "307df8e3-ef1b-431e-9b12-fdc58cb5df47": {"doc_hash": "301d9c328b46bc1f827d94d919e2cde7ef9f8d578be5f6f264b088c383e9bdd7"}, "8a094b6b-b03e-41e8-aea0-83885473da07": {"doc_hash": "63a4aaab60aeee9e3ad77bc52b96ee702564a2c2f5d9b0f343b6b4e5c32eecd0", "ref_doc_id": "af46dbf2-0257-4dc9-bd78-89bde2d772cd"}, "af46dbf2-0257-4dc9-bd78-89bde2d772cd": {"doc_hash": "8f8dc5c80fcf0713ef0d0af74f5ddbd27674ee4e78c205b99617822805cc0236"}, "ca8d9435-a66a-4b8e-af68-8650383c9362": {"doc_hash": "6b918eaec79c096a90d91329e16c52e43dbdb2ebc317de0bcdb75e15b3bd5d95", "ref_doc_id": "adf09a0a-0d54-46b8-9878-1dcab0251bd5"}, "adf09a0a-0d54-46b8-9878-1dcab0251bd5": {"doc_hash": "0a6d4d1c3cbb6bdf00555bac7fdb44f4b35da8694925004b7fd7d9413f3aa43a"}, "7a1e7023-ed1f-4630-8c7b-4ccf3cf0bb3b": {"doc_hash": "4acf08bba46be8dc4cf3697ca83ed2c682fac2d7acf78adef18d4d76285010a0", "ref_doc_id": "298d0550-5f65-438b-867e-9b19c8b0105e"}, "298d0550-5f65-438b-867e-9b19c8b0105e": {"doc_hash": "e1a1a0f11fa94598abdb46d6c5257931f0d19ec320bcd0c141fd0f49edfffce4"}, "06b155c0-bca2-4f73-8ed8-02a2a1839f58": {"doc_hash": "905c4922ae2e270e0f935cef9a8ae2840fd78cf83637560a31e5fbc0d5b594e6", "ref_doc_id": "f9043947-45e4-4cf3-b5db-b106c2ad0b50"}, "f9043947-45e4-4cf3-b5db-b106c2ad0b50": {"doc_hash": "32023a9ed50d462316db6f642a5ba86e466388a28aab98e057eb2579b8bfab20"}, "ca819f34-02b9-41bb-9bb2-6d21e2069b22": {"doc_hash": "09c6ddc43f6719e4a53321d01ee0ac0a290ae7b6203b676bc8946662a5925e36", "ref_doc_id": "938e4069-2bb9-4af2-bd0c-431d6b544513"}, "938e4069-2bb9-4af2-bd0c-431d6b544513": {"doc_hash": "cee842b21747d1064b8d857fe8a885578cd8a7938fd6e5c88f7671d7a2abcd36"}, "7d22b06e-423f-449f-80b1-63f7eef48976": {"doc_hash": "d92b7ea950230eb0f2a6a6515e9ff5aba1754835416d4f072fac90a65ad2a1d2", "ref_doc_id": "fa96f3c6-e8ab-4b1b-b3d1-c9fb3f737f0f"}, "fa96f3c6-e8ab-4b1b-b3d1-c9fb3f737f0f": {"doc_hash": "37901216be4aaae98ab0b0ab5d0a6783bd1d9d6ba8ab75a473fb7d56d9248643"}, "cdb05aaf-569f-45b8-b9d5-73aaf0f0a9e6": {"doc_hash": "95e376b34ff6cd0a6eef36a0c1cbbabf7959e6834e633b8d470611dcf8aecf09", "ref_doc_id": "8aab9cbd-83e8-4409-843d-320f6cf75359"}, "8aab9cbd-83e8-4409-843d-320f6cf75359": {"doc_hash": "a411b1b5a444dc56d1fa75629123393c0d6cedef38ce57850ea2674ffc4270b9"}, "40a02ba8-2605-42bb-81cb-68868dc365d9": {"doc_hash": "5c0199fdcca010f5057c6d07beddfad7e0ef7e8c18411fd045e3a8bb168aea11", "ref_doc_id": "fd4d577e-77aa-4f95-ba1c-89e560bfa739"}, "fd4d577e-77aa-4f95-ba1c-89e560bfa739": {"doc_hash": "26591e4bdbdcbfa2cc7ea513575e9587f0755fec284dba8e78baedfe37999470"}, "a3ea6649-f7a1-4ff2-bb57-9f2a6ce52e69": {"doc_hash": "4d644b1f3a9f3539e0da8e2b3ed90348415a6858fd1872f486194d2d6f45ad10", "ref_doc_id": "917ffb3f-1e86-4cf6-837a-6c9ec30ee8bb"}, "917ffb3f-1e86-4cf6-837a-6c9ec30ee8bb": {"doc_hash": "cdee7a95067aea7937c919a1b4b080b31eecb8644d0f7386f86fb2d423dbf1f8"}, "d3b54230-6220-4ca5-bae4-baecc66b54df": {"doc_hash": "d92b7ea950230eb0f2a6a6515e9ff5aba1754835416d4f072fac90a65ad2a1d2", "ref_doc_id": "5878c162-4272-4547-bd6d-5c130cce3aa3"}, "5878c162-4272-4547-bd6d-5c130cce3aa3": {"doc_hash": "37901216be4aaae98ab0b0ab5d0a6783bd1d9d6ba8ab75a473fb7d56d9248643"}, "52f1b6a5-2760-4e5f-b5ae-5df957da5d04": {"doc_hash": "95e376b34ff6cd0a6eef36a0c1cbbabf7959e6834e633b8d470611dcf8aecf09", "ref_doc_id": "d10dd478-78ee-49e8-84f6-d8bbcbc9ac1b"}, "d10dd478-78ee-49e8-84f6-d8bbcbc9ac1b": {"doc_hash": "a411b1b5a444dc56d1fa75629123393c0d6cedef38ce57850ea2674ffc4270b9"}, "3896c358-acb8-43c9-9031-e8514aba61a5": {"doc_hash": "23c486bba8ad750c5472a6defc6f454cf4b9d4ce18dad90f2217c03849536383", "ref_doc_id": "38b239ba-13ba-40a1-9e02-12281ad49f61"}, "38b239ba-13ba-40a1-9e02-12281ad49f61": {"doc_hash": "0cd06b62e5a059e3aadd4170a2f323ab518cb4ce89dc059694167b1a27373706"}, "322d2080-65f9-41a4-ae03-e94a97f585a3": {"doc_hash": "c44e2a0839a12cd70c748508248a78cb1018e3394f6a48f8661334d781486b25", "ref_doc_id": "46e53510-9843-4e51-a144-70b9e4c18a38"}, "46e53510-9843-4e51-a144-70b9e4c18a38": {"doc_hash": "721d15fa37d7f8338ff5944e40e024514f0ba437a4744aa0e9795fcb6ce3cee5"}}}